{"version":3,"sources":["src/pages/HtmlEditor/index.tsx"],"sourcesContent":["import { useDarkMode } from '@/hooks/useDarkMode';\nimport {\n  CodeOutlined,\n  CopyOutlined,\n  DownloadOutlined,\n  EditOutlined,\n  FormatPainterOutlined,\n} from '@ant-design/icons';\nimport Editor from '@monaco-editor/react';\nimport { Button, Card, message, Segmented, Space, Typography } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './styles.less';\n\nconst { Title } = Typography;\n\nconst HtmlEditorPage: React.FC = () => {\n  const { darkMode } = useDarkMode();\n  const [mode, setMode] = useState<'rich' | 'html'>('html');\n  const [htmlContent, setHtmlContent] = useState<string>(\n    '<h2>Welcome to HTML Editor</h2><p>Edit your content here...</p>',\n  );\n  const [previewHtml, setPreviewHtml] = useState<string>(htmlContent);\n\n  // --- Helper function to format HTML properly ---\n  const formatHTML = (html: string) => {\n    try {\n      // Parse HTML into a DOM\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, 'text/html');\n\n      // Recursive formatter\n      const formatNode = (node: Node, level = 0): string => {\n        const indent = '  '.repeat(level);\n        let formatted = '';\n\n        if (node.nodeType === Node.TEXT_NODE) {\n          const text = node.textContent?.trim();\n          if (text) formatted += indent + text + '\\n';\n          return formatted;\n        }\n\n        if (node.nodeType === Node.ELEMENT_NODE) {\n          const el = node as HTMLElement;\n          const tagName = el.tagName.toLowerCase();\n\n          // Open tag with attributes\n          formatted += `${indent}<${tagName}`;\n          for (const attr of Array.from(el.attributes)) {\n            formatted += ` ${attr.name}=\"${attr.value}\"`;\n          }\n          formatted += '>';\n\n          const childNodes = Array.from(el.childNodes);\n          const hasChildren = childNodes.some(\n            (child) => child.nodeType === Node.ELEMENT_NODE || child.textContent?.trim(),\n          );\n\n          if (hasChildren) formatted += '\\n';\n\n          // Recurse into children\n          for (const child of childNodes) {\n            formatted += formatNode(child, level + 1);\n          }\n\n          if (hasChildren) formatted += indent;\n          formatted += `</${tagName}>\\n`;\n        }\n\n        return formatted;\n      };\n\n      // Format <html> content inside <body>\n      const bodyNodes = Array.from(doc.body.childNodes);\n      return bodyNodes\n        .map((node) => formatNode(node))\n        .join('')\n        .trim();\n    } catch (err) {\n      console.error('Failed to format HTML:', err);\n      return html; // fallback\n    }\n  };\n\n  // --- Prettify HTML code ---\n  const prettifyHTML = () => {\n    if (!htmlContent.trim()) {\n      message.warning('No HTML content to prettify.');\n      return;\n    }\n    try {\n      const pretty = formatHTML(htmlContent);\n      setHtmlContent(pretty);\n      setPreviewHtml(pretty);\n      message.success('HTML prettified!');\n    } catch (err) {\n      console.error(err);\n      message.error('Failed to prettify HTML.');\n    }\n  };\n\n  // Sync preview whenever content changes\n  useEffect(() => {\n    setPreviewHtml(htmlContent);\n  }, [htmlContent, mode]);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(htmlContent);\n      message.success('Copied HTML to clipboard!');\n    } catch {\n      message.error('Failed to copy HTML');\n    }\n  };\n\n  const handleDownload = () => {\n    const blob = new Blob([htmlContent], { type: 'text/html;charset=utf-8' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'index.html';\n    link.click();\n  };\n\n  return (\n    <Card\n      title={\n        <Space>\n          <Title level={4} style={{ margin: 0 }}>\n            HTML Editor\n          </Title>\n          <Segmented\n            options={[\n              { label: 'HTML Mode', value: 'html', icon: <CodeOutlined /> },\n              { label: 'Rich Mode', value: 'rich', icon: <EditOutlined /> },\n            ]}\n            value={mode}\n            onChange={(val) => setMode(val as 'rich' | 'html')}\n          />\n        </Space>\n      }\n      className=\"html-card\"\n    >\n      <div className=\"html-container\">\n        {/* --- Left side: Editor --- */}\n        <div className=\"editor-pane\">\n          <Title level={5}>{mode === 'rich' ? 'Edit (Rich Text)' : 'Edit (HTML Code)'}</Title>\n\n          {mode === 'rich' ? (\n            <ReactQuill value={htmlContent} onChange={setHtmlContent} className=\"quill-editor\" />\n          ) : (\n            <Editor\n              height=\"600px\"\n              language=\"html\"\n              value={htmlContent}\n              onChange={(val) => setHtmlContent(val || '')}\n              theme={darkMode ? 'vs-dark' : 'light'}\n              options={{\n                minimap: { enabled: false },\n                automaticLayout: true,\n              }}\n            />\n          )}\n\n          {/* Action buttons */}\n          {mode === 'html' && (\n            <Space style={{ marginTop: 16 }}>\n              <Button icon={<FormatPainterOutlined />} onClick={prettifyHTML}>\n                Prettify\n              </Button>\n              <Button icon={<CopyOutlined />} onClick={handleCopy}>\n                Copy\n              </Button>\n              <Button icon={<DownloadOutlined />} onClick={handleDownload}>\n                Download\n              </Button>\n            </Space>\n          )}\n        </div>\n\n        {/* --- Right side: Live Preview --- */}\n        <div className=\"preview-pane\">\n          <Title level={5}>Live Preview</Title>\n          <div className=\"html-preview\" dangerouslySetInnerHTML={{ __html: previewHtml }} />\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default HtmlEditorPage;\n"],"names":[],"mappings":"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"}