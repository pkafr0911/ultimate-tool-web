{"version":3,"sources":["src/pages/Password/index.tsx"],"sourcesContent":["import { Button, Card, Checkbox, Input, InputNumber, Space, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport './styles.less';\n\nconst { Text, Paragraph } = Typography;\n\n// --- Password generation helper ---\nfunction generatePassword(\n  length: number,\n  opts: { lower: boolean; upper: boolean; number: boolean; special: boolean; hex: boolean },\n) {\n  const lower = 'abcdefghijklmnopqrstuvwxyz';\n  const upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const numbers = '0123456789';\n  const special = '!@#$%^&*()_+-=[]{}|;:,./<>?';\n  const hex = 'ABCDEFabcdef0123456789';\n\n  let pool = '';\n  if (opts.lower) pool += lower;\n  if (opts.upper) pool += upper;\n  if (opts.number) pool += numbers;\n  if (opts.special) pool += special;\n  if (opts.hex) pool += hex;\n\n  if (!pool) return '';\n  let pw = '';\n  for (let i = 0; i < length; i++) pw += pool[Math.floor(Math.random() * pool.length)];\n  return pw;\n}\n\n// --- Main Component ---\nconst PasswordPage: React.FC = () => {\n  const [length, setLength] = useState(12);\n  const [opts, setOpts] = useState({\n    lower: true,\n    upper: true,\n    number: true,\n    special: true,\n    hex: false,\n  });\n  const [value, setValue] = useState('');\n\n  const regenerate = () => {\n    setValue(generatePassword(length, opts));\n  };\n\n  return (\n    <Card title=\"🔐 Password Generator\" className=\"password-card\">\n      <Space direction=\"vertical\" style={{ width: '100%' }}>\n        {/* --- Page Description --- */}\n        <Paragraph type=\"secondary\" style={{ marginBottom: 8 }}>\n          This page helps you quickly generate secure passwords with custom settings such as length,\n          character types, and an optional hex mode.\n        </Paragraph>\n\n        {/* --- Options --- */}\n        <InputNumber\n          min={4}\n          max={64}\n          value={length}\n          onChange={(v) => setLength(Number(v))}\n          addonBefore=\"Length\"\n        />\n        <Checkbox\n          checked={opts.lower}\n          onChange={(e) => setOpts({ ...opts, lower: e.target.checked })}\n        >\n          Lowercase\n        </Checkbox>\n        <Checkbox\n          checked={opts.upper}\n          onChange={(e) => setOpts({ ...opts, upper: e.target.checked })}\n        >\n          Uppercase\n        </Checkbox>\n        <Checkbox\n          checked={opts.number}\n          onChange={(e) => setOpts({ ...opts, number: e.target.checked })}\n        >\n          Numbers\n        </Checkbox>\n        <Checkbox\n          checked={opts.special}\n          onChange={(e) => setOpts({ ...opts, special: e.target.checked })}\n        >\n          Special Characters\n        </Checkbox>\n        <Checkbox checked={opts.hex} onChange={(e) => setOpts({ ...opts, hex: e.target.checked })}>\n          Hex Letters (A–F, 0–9)\n        </Checkbox>\n\n        {/* --- Generate Button --- */}\n        <Button type=\"primary\" onClick={regenerate}>\n          Generate Password\n        </Button>\n\n        {/* --- Output --- */}\n        <div className=\"password-output\">\n          <Typography.Text strong className=\"password-label\">\n            Generated Password:\n          </Typography.Text>\n\n          <Input\n            value={value}\n            readOnly\n            placeholder=\"Click Generate to create a password\"\n            className=\"password-display\"\n          />\n\n          {value && (\n            <Typography.Text copyable className=\"password-copy\">\n              {value}\n            </Typography.Text>\n          )}\n        </div>\n      </Space>\n    </Card>\n  );\n};\n\nexport default PasswordPage;\n"],"names":[],"mappings":"qQAwHA,+CAAA,iMAvHgC,YAGhC,GAAM,CAAE,KAAA,CAAI,CAAE,UAAA,CAAS,CAAE,CAAG,SAAU,KAoHtC,EAzF+B,KAC7B,GAAM,CAAC,EAAQ,EAAU,CAAG,GAAA,UAAQ,EAAC,IAC/B,CAAC,EAAM,EAAQ,CAAG,GAAA,UAAQ,EAAC,CAC/B,MAAO,CAAA,EACP,MAAO,CAAA,EACP,OAAQ,CAAA,EACR,QAAS,CAAA,EACT,IAAK,CAAA,CACP,GACM,CAAC,EAAO,EAAS,CAAG,GAAA,UAAQ,EAAC,IAMnC,MACE,UAAC,SAAI,EAAC,MAAM,+BAAwB,UAAU,yBAC5C,WAAC,SAAK,EAAC,UAAU,WAAW,MAAO,CAAE,MAAO,MAAO,YAEjD,UAAC,GAAU,KAAK,YAAY,MAAO,CAAE,aAAc,CAAE,WAAG,0IAMxD,UAAC,SAAW,EACV,IAAK,EACL,IAAK,GACL,MAAO,EACP,SAAU,AAAC,GAAM,EAAU,OAAO,IAClC,YAAY,WAEd,UAAC,SAAQ,EACP,QAAS,EAAK,KAAK,CACnB,SAAU,AAAC,GAAM,EAAQ,CAAE,GAAG,CAAI,CAAE,MAAO,EAAE,MAAM,CAAC,OAAO,AAAC,YAC7D,cAGD,UAAC,SAAQ,EACP,QAAS,EAAK,KAAK,CACnB,SAAU,AAAC,GAAM,EAAQ,CAAE,GAAG,CAAI,CAAE,MAAO,EAAE,MAAM,CAAC,OAAO,AAAC,YAC7D,cAGD,UAAC,SAAQ,EACP,QAAS,EAAK,MAAM,CACpB,SAAU,AAAC,GAAM,EAAQ,CAAE,GAAG,CAAI,CAAE,OAAQ,EAAE,MAAM,CAAC,OAAO,AAAC,YAC9D,YAGD,UAAC,SAAQ,EACP,QAAS,EAAK,OAAO,CACrB,SAAU,AAAC,GAAM,EAAQ,CAAE,GAAG,CAAI,CAAE,QAAS,EAAE,MAAM,CAAC,OAAO,AAAC,YAC/D,uBAGD,UAAC,SAAQ,EAAC,QAAS,EAAK,GAAG,CAAE,SAAU,AAAC,GAAM,EAAQ,CAAE,GAAG,CAAI,CAAE,IAAK,EAAE,MAAM,CAAC,OAAO,AAAC,YAAI,qCAK3F,UAAC,SAAM,EAAC,KAAK,UAAU,QAlDV,KACjB,EAAS,AApCb,SACE,CAAc,CACd,CAAyF,EAQzF,IAAI,EAAO,GAOX,GANI,EAAK,KAAK,EAAE,CAAA,GAPF,4BAOc,EACxB,EAAK,KAAK,EAAE,CAAA,GAPF,4BAOc,EACxB,EAAK,MAAM,EAAE,CAAA,GAPD,YAOe,EAC3B,EAAK,OAAO,EAAE,CAAA,GAPF,6BAOgB,EAC5B,EAAK,GAAG,EAAE,CAAA,GAPF,wBAOY,EAEpB,CAAC,EAAM,MAAO,GAClB,IAAI,EAAK,GACT,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,IAAK,GAAM,CAAI,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAK,MAAM,EAAE,CACpF,OAAO,EACT,EAe8B,EAAQ,IACpC,WAgDkD,sBAK5C,WAAC,OAAI,UAAU,4BACb,UAAC,SAAU,CAAC,IAAI,EAAC,MAAM,IAAC,UAAU,0BAAiB,wBAInD,UAAC,SAAK,EACJ,MAAO,EACP,QAAQ,IACR,YAAY,sCACZ,UAAU,qBAGX,GACC,UAAC,SAAU,CAAC,IAAI,EAAC,QAAQ,IAAC,UAAU,yBACjC,YAOf"}