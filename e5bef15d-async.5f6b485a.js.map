{"version":3,"sources":["src/pages/WheelOfNames/index.tsx"],"sourcesContent":["import { Button, Card, Input, message, Space, Typography } from 'antd';\nimport { useEffect, useRef, useState } from 'react';\nimport Confetti from 'react-confetti';\nimport './styles.less';\n\nconst { Title } = Typography;\nconst colors: string[] = ['#ff7875', '#ffa940', '#ffd666', '#95de64', '#69c0ff', '#b37feb'];\n\nconst WheelOfNames: React.FC = () => {\n  const [nameInput, setNameInput] = useState<string>('Alice\\nBob\\nCharlie\\nDavid');\n  const [names, setNames] = useState<string[]>(\n    nameInput.split('\\n').filter((n) => n.trim() !== ''),\n  );\n  const [rotation, setRotation] = useState<number>(0);\n  const [spinning, setSpinning] = useState<boolean>(false);\n  const [winner, setWinner] = useState<string | null>(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    setNames(nameInput.split('\\n').filter((n) => n.trim() !== ''));\n  }, [nameInput]);\n\n  useEffect(() => {\n    drawWheel(rotation);\n  }, [names, rotation]);\n\n  const drawWheel = (angle: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const total = names.length;\n    const arc = (2 * Math.PI) / total;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.save();\n    ctx.translate(canvas.width / 2, canvas.height / 2);\n    ctx.rotate((angle * Math.PI) / 180);\n\n    names.forEach((name, i) => {\n      ctx.beginPath();\n      ctx.fillStyle = colors[i % colors.length];\n      ctx.moveTo(0, 0);\n      ctx.arc(0, 0, canvas.width / 2, i * arc, (i + 1) * arc);\n      ctx.fill();\n\n      ctx.save();\n      ctx.fillStyle = '#fff';\n      ctx.font = `bold 20px sans-serif`;\n      ctx.translate(\n        Math.cos(i * arc + arc / 2) * (canvas.width / 3),\n        Math.sin(i * arc + arc / 2) * (canvas.height / 3),\n      );\n      ctx.rotate(i * arc + arc / 2);\n      ctx.fillText(name, -ctx.measureText(name).width / 2, 5);\n      ctx.restore();\n    });\n\n    if (!spinning) {\n      ctx.fillStyle = '#fff';\n      ctx.font = 'bold 28px sans-serif';\n      ctx.fillText('Click to Spin', -ctx.measureText('Click to Spin').width / 2, 10);\n    }\n\n    ctx.restore();\n  };\n\n  const handleSpin = () => {\n    if (names.length < 2) {\n      message.error('Add at least two names!');\n      return;\n    }\n\n    setWinner(null);\n    setSpinning(true);\n    const newRotation = rotation + 360 * 5 + Math.floor(Math.random() * 360);\n    animateSpin(rotation, newRotation, 4000);\n  };\n\n  const animateSpin = (start: number, end: number, duration: number) => {\n    const startTime = Date.now();\n    const animate = () => {\n      const elapsed = Date.now() - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easeOut = 1 - Math.pow(1 - progress, 3);\n      setRotation(start + (end - start) * easeOut);\n\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        const normalized = ((end % 360) + 360) % 360;\n        const segment = 360 / names.length;\n        const winnerIndex = Math.floor((360 - normalized) / segment) % names.length;\n        setWinner(names[winnerIndex]);\n        setSpinning(false);\n        message.success(`Winner: ${names[winnerIndex]}`);\n\n        setShowConfetti(true);\n        setTimeout(() => setShowConfetti(false), 15000);\n      }\n    };\n    requestAnimationFrame(animate);\n  };\n\n  return (\n    <div className=\"wheel-light-container\">\n      {showConfetti && <Confetti />}\n      <Card className=\"wheel-light-card\" variant={'borderless'}>\n        <Title level={3} className=\"wheel-light-title\">\n          ðŸŽ¡ Wheel of Names\n        </Title>\n        <div className=\"wheel-light-content\">\n          <div className=\"wheel-light-canvas\">\n            <canvas\n              ref={canvasRef}\n              width={450}\n              height={450}\n              onClick={handleSpin}\n              style={{ cursor: 'pointer' }}\n            />\n            <div className=\"wheel-light-pointer\" />\n          </div>\n\n          <div className=\"wheel-light-controls\">\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              className=\"spin-btn-light\"\n              onClick={handleSpin}\n              disabled={spinning}\n            >\n              Spin the Wheel\n            </Button>\n\n            {winner && (\n              <Title level={4} style={{ color: '#52c41a', marginTop: 10 }}>\n                Winner: {winner}\n              </Title>\n            )}\n\n            <Space direction=\"vertical\" style={{ width: '100%', marginTop: 16 }}>\n              <Input.TextArea\n                rows={10}\n                value={nameInput}\n                onChange={(e) => setNameInput(e.target.value)}\n                placeholder=\"Enter names, each on a new line\"\n              />\n            </Space>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default WheelOfNames;\n"],"names":[],"mappings":"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"}