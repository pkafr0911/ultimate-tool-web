{"version":3,"sources":["src/pages/HtmlEditor/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Space, Typography, message, Segmented } from 'antd';\r\nimport {\r\n  CopyOutlined,\r\n  DownloadOutlined,\r\n  CodeOutlined,\r\n  EditOutlined,\r\n  FormatPainterOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport Editor from '@monaco-editor/react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './styles.less';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst HtmlEditorPage: React.FC = () => {\r\n  const [mode, setMode] = useState<'rich' | 'html'>('html');\r\n  const [htmlContent, setHtmlContent] = useState<string>(\r\n    '<h2>Welcome to HTML Editor</h2><p>Edit your content here...</p>',\r\n  );\r\n  const [previewHtml, setPreviewHtml] = useState<string>(htmlContent);\r\n\r\n  // --- Helper function to format HTML properly ---\r\n  const formatHTML = (html: string) => {\r\n    try {\r\n      // Parse HTML into a DOM\r\n      const parser = new DOMParser();\r\n      const doc = parser.parseFromString(html, 'text/html');\r\n\r\n      // Recursive formatter\r\n      const formatNode = (node: Node, level = 0): string => {\r\n        const indent = '  '.repeat(level);\r\n        let formatted = '';\r\n\r\n        if (node.nodeType === Node.TEXT_NODE) {\r\n          const text = node.textContent?.trim();\r\n          if (text) formatted += indent + text + '\\n';\r\n          return formatted;\r\n        }\r\n\r\n        if (node.nodeType === Node.ELEMENT_NODE) {\r\n          const el = node as HTMLElement;\r\n          const tagName = el.tagName.toLowerCase();\r\n\r\n          // Open tag with attributes\r\n          formatted += `${indent}<${tagName}`;\r\n          for (const attr of Array.from(el.attributes)) {\r\n            formatted += ` ${attr.name}=\"${attr.value}\"`;\r\n          }\r\n          formatted += '>';\r\n\r\n          const childNodes = Array.from(el.childNodes);\r\n          const hasChildren = childNodes.some(\r\n            (child) => child.nodeType === Node.ELEMENT_NODE || child.textContent?.trim(),\r\n          );\r\n\r\n          if (hasChildren) formatted += '\\n';\r\n\r\n          // Recurse into children\r\n          for (const child of childNodes) {\r\n            formatted += formatNode(child, level + 1);\r\n          }\r\n\r\n          if (hasChildren) formatted += indent;\r\n          formatted += `</${tagName}>\\n`;\r\n        }\r\n\r\n        return formatted;\r\n      };\r\n\r\n      // Format <html> content inside <body>\r\n      const bodyNodes = Array.from(doc.body.childNodes);\r\n      return bodyNodes\r\n        .map((node) => formatNode(node))\r\n        .join('')\r\n        .trim();\r\n    } catch (err) {\r\n      console.error('Failed to format HTML:', err);\r\n      return html; // fallback\r\n    }\r\n  };\r\n\r\n  // --- Prettify HTML code ---\r\n  const prettifyHTML = () => {\r\n    if (!htmlContent.trim()) {\r\n      message.warning('No HTML content to prettify.');\r\n      return;\r\n    }\r\n    try {\r\n      const pretty = formatHTML(htmlContent);\r\n      setHtmlContent(pretty);\r\n      setPreviewHtml(pretty);\r\n      message.success('HTML prettified!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      message.error('Failed to prettify HTML.');\r\n    }\r\n  };\r\n\r\n  // Sync preview whenever content changes\r\n  useEffect(() => {\r\n    setPreviewHtml(htmlContent);\r\n  }, [htmlContent, mode]);\r\n\r\n  const handleCopy = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(htmlContent);\r\n      message.success('Copied HTML to clipboard!');\r\n    } catch {\r\n      message.error('Failed to copy HTML');\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const blob = new Blob([htmlContent], { type: 'text/html;charset=utf-8' });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = 'index.html';\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      title={\r\n        <Space>\r\n          <Title level={4} style={{ margin: 0 }}>\r\n            HTML Editor\r\n          </Title>\r\n          <Segmented\r\n            options={[\r\n              { label: 'HTML Mode', value: 'html', icon: <CodeOutlined /> },\r\n              { label: 'Rich Mode', value: 'rich', icon: <EditOutlined /> },\r\n            ]}\r\n            value={mode}\r\n            onChange={(val) => setMode(val as 'rich' | 'html')}\r\n          />\r\n        </Space>\r\n      }\r\n      className=\"html-card\"\r\n    >\r\n      <div className=\"html-container\">\r\n        {/* --- Left side: Editor --- */}\r\n        <div className=\"editor-pane\">\r\n          <Title level={5}>{mode === 'rich' ? 'Edit (Rich Text)' : 'Edit (HTML Code)'}</Title>\r\n\r\n          {mode === 'rich' ? (\r\n            <ReactQuill value={htmlContent} onChange={setHtmlContent} className=\"quill-editor\" />\r\n          ) : (\r\n            <Editor\r\n              height=\"600px\"\r\n              language=\"html\"\r\n              value={htmlContent}\r\n              onChange={(val) => setHtmlContent(val || '')}\r\n              options={{\r\n                minimap: { enabled: false },\r\n                automaticLayout: true,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {/* Action buttons */}\r\n          {mode === 'html' && (\r\n            <Space style={{ marginTop: 16 }}>\r\n              <Button icon={<FormatPainterOutlined />} onClick={prettifyHTML}>\r\n                Prettify\r\n              </Button>\r\n              <Button icon={<CopyOutlined />} onClick={handleCopy}>\r\n                Copy\r\n              </Button>\r\n              <Button icon={<DownloadOutlined />} onClick={handleDownload}>\r\n                Download\r\n              </Button>\r\n            </Space>\r\n          )}\r\n        </div>\r\n\r\n        {/* --- Right side: Live Preview --- */}\r\n        <div className=\"preview-pane\">\r\n          <Title level={5}>Live Preview</Title>\r\n          <div className=\"html-preview\" dangerouslySetInnerHTML={{ __html: previewHtml }} />\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HtmlEditorPage;\r\n"],"names":[],"mappings":"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"}