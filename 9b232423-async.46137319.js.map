{"version":3,"sources":["node_modules/jose/dist/webapi/lib/sign.js","node_modules/jose/dist/webapi/jws/flattened/sign.js","node_modules/jose/dist/webapi/jws/compact/sign.js","node_modules/jose/dist/webapi/lib/epoch.js","node_modules/jose/dist/webapi/lib/secs.js","node_modules/jose/dist/webapi/lib/jwt_claims_set.js","node_modules/jose/dist/webapi/jwt/sign.js","node_modules/jose/dist/webapi/lib/verify.js","node_modules/jose/dist/webapi/lib/validate_algorithms.js","node_modules/jose/dist/webapi/jws/flattened/verify.js","node_modules/jose/dist/webapi/jws/compact/verify.js","node_modules/jose/dist/webapi/jwt/verify.js","src/pages/JWT/index.tsx"],"sourcesContent":["import subtleAlgorithm from './subtle_dsa.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nexport default async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\n","import { encode as b64u } from '../../util/base64url.js';\nimport sign from '../../lib/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport normalizeKey from '../../lib/normalize_key.js';\nexport class FlattenedSign {\n    #payload;\n    #protectedHeader;\n    #unprotectedHeader;\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this.#payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.#protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.#protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.#unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.#unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this.#protectedHeader && !this.#unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this.#protectedHeader, this.#unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this.#protectedHeader,\n            ...this.#unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, this.#protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this.#protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyType(alg, key, 'sign');\n        let payload = this.#payload;\n        if (b64) {\n            payload = encoder.encode(b64u(payload));\n        }\n        let protectedHeader;\n        if (this.#protectedHeader) {\n            protectedHeader = encoder.encode(b64u(JSON.stringify(this.#protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const k = await normalizeKey(key, alg);\n        const signature = await sign(alg, k, data);\n        const jws = {\n            signature: b64u(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this.#unprotectedHeader) {\n            jws.header = this.#unprotectedHeader;\n        }\n        if (this.#protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    #flattened;\n    constructor(payload) {\n        this.#flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this.#flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this.#flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n","export default (date) => Math.floor(date.getTime() / 1000);\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nimport { encoder } from './buffer_utils.js';\nfunction validateInput(label, input) {\n    if (!Number.isFinite(input)) {\n        throw new TypeError(`Invalid ${label} input`);\n    }\n    return input;\n}\nconst normalizeTyp = (value) => {\n    if (value.includes('/')) {\n        return value.toLowerCase();\n    }\n    return `application/${value.toLowerCase()}`;\n};\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport function validateClaimsSet(protectedHeader, encodedPayload, options = {}) {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n}\nexport class JWTClaimsBuilder {\n    #payload;\n    constructor(payload) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this.#payload = structuredClone(payload);\n    }\n    data() {\n        return encoder.encode(JSON.stringify(this.#payload));\n    }\n    get iss() {\n        return this.#payload.iss;\n    }\n    set iss(value) {\n        this.#payload.iss = value;\n    }\n    get sub() {\n        return this.#payload.sub;\n    }\n    set sub(value) {\n        this.#payload.sub = value;\n    }\n    get aud() {\n        return this.#payload.aud;\n    }\n    set aud(value) {\n        this.#payload.aud = value;\n    }\n    set jti(value) {\n        this.#payload.jti = value;\n    }\n    set nbf(value) {\n        if (typeof value === 'number') {\n            this.#payload.nbf = validateInput('setNotBefore', value);\n        }\n        else if (value instanceof Date) {\n            this.#payload.nbf = validateInput('setNotBefore', epoch(value));\n        }\n        else {\n            this.#payload.nbf = epoch(new Date()) + secs(value);\n        }\n    }\n    set exp(value) {\n        if (typeof value === 'number') {\n            this.#payload.exp = validateInput('setExpirationTime', value);\n        }\n        else if (value instanceof Date) {\n            this.#payload.exp = validateInput('setExpirationTime', epoch(value));\n        }\n        else {\n            this.#payload.exp = epoch(new Date()) + secs(value);\n        }\n    }\n    set iat(value) {\n        if (typeof value === 'undefined') {\n            this.#payload.iat = epoch(new Date());\n        }\n        else if (value instanceof Date) {\n            this.#payload.iat = validateInput('setIssuedAt', epoch(value));\n        }\n        else if (typeof value === 'string') {\n            this.#payload.iat = validateInput('setIssuedAt', epoch(new Date()) + secs(value));\n        }\n        else {\n            this.#payload.iat = validateInput('setIssuedAt', value);\n        }\n    }\n}\n","import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { JWTClaimsBuilder } from '../lib/jwt_claims_set.js';\nexport class SignJWT {\n    #protectedHeader;\n    #jwt;\n    constructor(payload = {}) {\n        this.#jwt = new JWTClaimsBuilder(payload);\n    }\n    setIssuer(issuer) {\n        this.#jwt.iss = issuer;\n        return this;\n    }\n    setSubject(subject) {\n        this.#jwt.sub = subject;\n        return this;\n    }\n    setAudience(audience) {\n        this.#jwt.aud = audience;\n        return this;\n    }\n    setJti(jwtId) {\n        this.#jwt.jti = jwtId;\n        return this;\n    }\n    setNotBefore(input) {\n        this.#jwt.nbf = input;\n        return this;\n    }\n    setExpirationTime(input) {\n        this.#jwt.exp = input;\n        return this;\n    }\n    setIssuedAt(input) {\n        this.#jwt.iat = input;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this.#protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        const sig = new CompactSign(this.#jwt.data());\n        sig.setProtectedHeader(this.#protectedHeader);\n        if (Array.isArray(this.#protectedHeader?.crit) &&\n            this.#protectedHeader.crit.includes('b64') &&\n            this.#protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n","import subtleAlgorithm from './subtle_dsa.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nexport default async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\n","export default (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\n","import { decode as b64u } from '../../util/base64url.js';\nimport verify from '../../lib/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport normalizeKey from '../../lib/normalize_key.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = b64u(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = b64u(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const k = await normalizeKey(key, alg);\n    const verified = await verify(alg, k, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = b64u(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key: k };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { compactVerify } from '../jws/compact/verify.js';\nimport { validateClaimsSet } from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = validateClaimsSet(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { PageContainer } from '@ant-design/pro-components';\r\nimport { Button, Card, Input, Space, Typography, message } from 'antd';\r\nimport { SignJWT, jwtVerify } from 'jose';\r\nimport React, { useState } from 'react';\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst JWTTool: React.FC = () => {\r\n  const [secret, setSecret] = useState('');\r\n  const [payload, setPayload] = useState('');\r\n  const [token, setToken] = useState('');\r\n  const [decoded, setDecoded] = useState('');\r\n  const encoder = new TextEncoder();\r\n\r\n  const parsePayload = (text: string) => {\r\n    const trimmed = text.trim();\r\n    try {\r\n      return JSON.parse(trimmed);\r\n    } catch {\r\n      try {\r\n        let fixed = trimmed\r\n          .replace(/'/g, '\"') // replace single quotes\r\n          .replace(/([a-zA-Z0-9_]+):/g, '\"$1\":'); // add quotes to keys\r\n        return JSON.parse(fixed);\r\n      } catch {\r\n        throw new Error('Invalid JSON payload format.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEncrypt = async () => {\r\n    try {\r\n      const obj = parsePayload(payload);\r\n      const secretKey = encoder.encode(secret);\r\n\r\n      const jwt = await new SignJWT(obj)\r\n        .setProtectedHeader({ alg: 'HS256' })\r\n        .setIssuedAt()\r\n        .setExpirationTime('2h')\r\n        .sign(secretKey);\r\n\r\n      setToken(jwt);\r\n      message.success('JWT token created successfully!');\r\n    } catch (err: any) {\r\n      console.error(err);\r\n      message.error(err.message || 'Error creating JWT.');\r\n    }\r\n  };\r\n\r\n  const handleDecrypt = async () => {\r\n    try {\r\n      const secretKey = encoder.encode(secret);\r\n      const { payload: verified } = await jwtVerify(token, secretKey);\r\n      setDecoded(JSON.stringify(verified, null, 2));\r\n      message.success('Token verified successfully!');\r\n    } catch (err: any) {\r\n      message.error(`Invalid token: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const handlePrettify = () => {\r\n    try {\r\n      const obj = parsePayload(payload);\r\n      setPayload(JSON.stringify(obj, null, 2));\r\n      message.success('Payload formatted successfully!');\r\n    } catch {\r\n      message.error('Cannot format: invalid JSON.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Card title=\"🔐 JWT Encrypt / Decrypt Tool\" variant={'borderless'}>\r\n        <Space direction=\"vertical\" style={{ width: '100%' }} size=\"large\">\r\n          <Input.Password\r\n            placeholder=\"Enter Secret Key\"\r\n            value={secret}\r\n            onChange={(e) => setSecret(e.target.value)}\r\n          />\r\n\r\n          <TextArea\r\n            rows={4}\r\n            placeholder=\"Enter Payload JSON (e.g. { 'user': 'admin' })\"\r\n            value={payload}\r\n            onChange={(e) => setPayload(e.target.value)}\r\n          />\r\n\r\n          <Space>\r\n            <Button type=\"primary\" onClick={handleEncrypt}>\r\n              Encrypt (Sign JWT)\r\n            </Button>\r\n            <Button onClick={handlePrettify}>Prettify JSON</Button>\r\n          </Space>\r\n\r\n          <TextArea\r\n            rows={4}\r\n            placeholder=\"Generated or Existing JWT Token\"\r\n            value={token}\r\n            onChange={(e) => setToken(e.target.value)}\r\n          />\r\n\r\n          <Button onClick={handleDecrypt}>Decrypt (Verify JWT)</Button>\r\n\r\n          {decoded && (\r\n            <>\r\n              <Title level={5}>Decoded Payload:</Title>\r\n              <pre\r\n                style={{\r\n                  background: '#f7f7f7',\r\n                  padding: 12,\r\n                  borderRadius: 6,\r\n                  whiteSpace: 'pre-wrap',\r\n                  wordBreak: 'break-word',\r\n                }}\r\n              >\r\n                {decoded}\r\n              </pre>\r\n            </>\r\n          )}\r\n        </Space>\r\n      </Card>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default JWTTool;\r\n"],"names":[],"mappings":"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"}