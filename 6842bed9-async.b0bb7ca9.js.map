{"version":3,"sources":["node_modules/@ant-design/icons-svg/es/asn/AimOutlined.js","node_modules/@ant-design/icons/es/icons/AimOutlined.js","node_modules/@ant-design/icons/es/icons/CheckOutlined.js","node_modules/@ant-design/icons-svg/es/asn/RedoOutlined.js","node_modules/@ant-design/icons/es/icons/RedoOutlined.js","node_modules/@ant-design/icons-svg/es/asn/UndoOutlined.js","node_modules/@ant-design/icons/es/icons/UndoOutlined.js","src/pages/Sudoku/index.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar AimOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M952 474H829.8C812.5 327.6 696.4 211.5 550 194.2V72c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v122.2C327.6 211.5 211.5 327.6 194.2 474H72c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h122.2C211.5 696.4 327.6 812.5 474 829.8V952c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V829.8C696.4 812.5 812.5 696.4 829.8 550H952c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zM512 756c-134.8 0-244-109.2-244-244s109.2-244 244-244 244 109.2 244 244-109.2 244-244 244z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 392c-32.1 0-62.1 12.4-84.8 35.2-22.7 22.7-35.2 52.7-35.2 84.8s12.5 62.1 35.2 84.8C449.9 619.4 480 632 512 632s62.1-12.5 84.8-35.2C619.4 574.1 632 544 632 512s-12.5-62.1-35.2-84.8A118.57 118.57 0 00512 392z\" } }] }, \"name\": \"aim\", \"theme\": \"outlined\" };\nexport default AimOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport AimOutlinedSvg from \"@ant-design/icons-svg/es/asn/AimOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar AimOutlined = function AimOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: AimOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(AimOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'AimOutlined';\n}\nexport default RefIcon;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(CheckOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'CheckOutlined';\n}\nexport default RefIcon;","// This icon file is generated automatically.\nvar RedoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z\" } }] }, \"name\": \"redo\", \"theme\": \"outlined\" };\nexport default RedoOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RedoOutlinedSvg from \"@ant-design/icons-svg/es/asn/RedoOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar RedoOutlined = function RedoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RedoOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(RedoOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'RedoOutlined';\n}\nexport default RefIcon;","// This icon file is generated automatically.\nvar UndoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M511.4 124C290.5 124.3 112 303 112 523.9c0 128 60.2 242 153.8 315.2l-37.5 48c-4.1 5.3-.3 13 6.3 12.9l167-.8c5.2 0 9-4.9 7.7-9.9L369.8 727a8 8 0 00-14.1-3L315 776.1c-10.2-8-20-16.7-29.3-26a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-7.5 7.5-15.3 14.5-23.4 21.2a7.93 7.93 0 00-1.2 11.1l39.4 50.5c2.8 3.5 7.9 4.1 11.4 1.3C854.5 760.8 912 649.1 912 523.9c0-221.1-179.4-400.2-400.6-399.9z\" } }] }, \"name\": \"undo\", \"theme\": \"outlined\" };\nexport default UndoOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UndoOutlinedSvg from \"@ant-design/icons-svg/es/asn/UndoOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar UndoOutlined = function UndoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UndoOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(UndoOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'UndoOutlined';\n}\nexport default RefIcon;","import { useIsMobile } from '@/hooks/useIsMobile';\nimport { useIsTouchDevice } from '@/hooks/useIsTouchDevice';\nimport {\n  AimOutlined,\n  CheckOutlined,\n  DeleteOutlined,\n  RedoOutlined,\n  UndoOutlined,\n} from '@ant-design/icons';\nimport { Button, Card, Col, message, Row, Select, Space, Typography } from 'antd';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Confetti from 'react-confetti';\nimport './styles.less';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\n// --------------------------\n// Types\n// --------------------------\n\ntype Cell = {\n  r: number;\n  c: number;\n  value: number | null; // user or clue value\n  given: boolean; // originally provided by puzzle\n  notes: Set<number>; // pencil marks\n  wrong?: boolean; // flagged by validator\n};\n\ntype Difficulty = 'easy' | 'medium' | 'hard' | 'expert';\n\n// --------------------------\n// Utilities: sudoku solver / generator (backtracking)\n// --------------------------\n\n// Deep-clone a Sudoku grid (2D array of Cell objects)\nconst cloneGrid = (g: Cell[][]) =>\n  g.map((row) => row.map((c) => ({ ...c, notes: new Set([...c.notes]) }))); // clone each Cell and copy its notes set\n\n// Convert Cell grid → 9x9 number matrix (empty = 0)\nconst cellGridToNumbers = (g: Cell[][]) => g.map((r) => r.map((c) => c.value ?? 0));\n\n// Convert number matrix → Cell grid (optionally apply givensMask)\nconst numbersToCellGrid = (nums: number[][], givensMask?: boolean[][]) =>\n  nums.map((row, r) =>\n    row.map((val, c) => ({\n      r, // row index\n      c, // column index\n      value: val === 0 ? null : val, // null for blanks, else number\n      given: givensMask ? !!givensMask[r][c] : val !== 0, // mark as given if mask true or value present\n      notes: new Set<number>(), // initialize empty notes set\n    })),\n  );\n\n// Check if placing value v at row r, col c is valid\nconst isSafe = (mat: number[][], r: number, c: number, v: number) => {\n  // check row and column\n  for (let i = 0; i < 9; i++) if (mat[r][i] === v || mat[i][c] === v) return false;\n  // compute top-left of 3x3 block\n  const br = Math.floor(r / 3) * 3;\n  const bc = Math.floor(c / 3) * 3;\n  // check 3x3 block\n  for (let i = 0; i < 3; i++)\n    for (let j = 0; j < 3; j++) if (mat[br + i][bc + j] === v) return false;\n  return true; // safe placement\n};\n\n// Solve Sudoku with backtracking\nconst solveSudoku = (matIn: number[][]): number[][] | null => {\n  const mat = matIn.map((r) => r.slice()); // copy matrix\n  const emptyPos: [number, number][] = []; // store empty cell positions\n\n  // collect empty cells\n  for (let r = 0; r < 9; r++)\n    for (let c = 0; c < 9; c++) if (mat[r][c] === 0) emptyPos.push([r, c]);\n\n  // recursive solver\n  const backtrack = (idx: number): boolean => {\n    if (idx >= emptyPos.length) return true; // all cells filled\n    const [r, c] = emptyPos[idx];\n    for (let v = 1; v <= 9; v++) {\n      if (!isSafe(mat, r, c, v)) continue; // skip invalid\n      mat[r][c] = v; // place value\n      if (backtrack(idx + 1)) return true; // recurse next\n      mat[r][c] = 0; // undo (backtrack)\n    }\n    return false;\n  };\n\n  if (backtrack(0)) return mat; // solved → return grid\n  return null; // unsolvable\n};\n\n// Generate a fully solved board randomly\nconst generateSolvedBoard = (): number[][] => {\n  const mat = Array.from({ length: 9 }, () => Array(9).fill(0)); // empty 9x9\n\n  // recursive fill with randomized order\n  const backtrack = (pos = 0): boolean => {\n    if (pos === 81) return true; // all filled\n    const r = Math.floor(pos / 9);\n    const c = pos % 9;\n    const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9].sort(() => Math.random() - 0.5); // shuffle numbers\n    for (const n of nums) {\n      if (!isSafe(mat, r, c, n)) continue;\n      mat[r][c] = n;\n      if (backtrack(pos + 1)) return true; // next cell\n      mat[r][c] = 0; // undo\n    }\n    return false;\n  };\n\n  backtrack(0);\n  return mat;\n};\n\n// Create a playable puzzle from a solved board\nconst makePuzzle = (\n  solved: number[][],\n  difficulty: Difficulty,\n): { puzzle: number[][]; givensMask: boolean[][] } => {\n  // target number of givens based on difficulty\n  const targets: Record<Difficulty, number> = {\n    easy: 36,\n    medium: 32,\n    hard: 28,\n    expert: 24,\n  };\n  const targetGivens = targets[difficulty] ?? 32; // default 32 givens\n\n  const puzzle = solved.map((r) => r.slice()); // copy solved grid\n  const givensMask = Array.from({ length: 9 }, () => Array(9).fill(true)); // track fixed cells\n\n  // shuffle all cell indices 0–80\n  const cells = Array.from({ length: 81 }, (_, i) => i).sort(() => Math.random() - 0.5);\n\n  // randomly remove numbers while keeping unique solvability\n  for (const idx of cells) {\n    const r = Math.floor(idx / 9);\n    const c = idx % 9;\n    if (!givensMask[r][c]) continue; // already removed\n\n    const backup = puzzle[r][c]; // store old value\n    puzzle[r][c] = 0; // remove\n    givensMask[r][c] = false; // mark empty\n\n    const solvedAttempt = solveSudoku(puzzle); // try to solve after removal\n\n    if (!solvedAttempt) {\n      // revert if puzzle unsolvable\n      puzzle[r][c] = backup;\n      givensMask[r][c] = true;\n    } else {\n      // stop if we’ve reached desired givens count\n      const givensCount = givensMask.flat().filter(Boolean).length;\n      if (givensCount <= targetGivens) break;\n    }\n  }\n\n  return { puzzle, givensMask };\n};\n\n// --------------------------\n// Component\n// --------------------------\n\nconst SudokuPage: React.FC = () => {\n  const isMobile = useIsMobile();\n  const isTouch = useIsTouchDevice();\n\n  const [difficulty, setDifficulty] = useState<Difficulty>('medium');\n  const [solution, setSolution] = useState<number[][] | null>(null);\n  const [grid, setGrid] = useState<Cell[][]>(() =>\n    numbersToCellGrid(Array.from({ length: 9 }, () => Array(9).fill(0))),\n  );\n  const [started, setStarted] = useState(false);\n  const [timeSec, setTimeSec] = useState(0);\n  const [timerRef, setTimerRef] = useState<number | null>(null);\n  const [notesMode, setNotesMode] = useState(false);\n  const [selected, setSelected] = useState<[number, number] | null>(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const historyRef = useRef<Cell[][][]>([]);\n  const futureRef = useRef<Cell[][][]>([]);\n\n  // Start a new puzzle\n  const startNew = (diff = difficulty) => {\n    clearTimer();\n    const solved = generateSolvedBoard();\n    const { puzzle, givensMask } = makePuzzle(solved, diff);\n    setSolution(solved);\n    setGrid(numbersToCellGrid(puzzle, givensMask));\n    setDifficulty(diff);\n    setStarted(true);\n    setTimeSec(0);\n    setShowConfetti(false);\n    historyRef.current = [];\n    futureRef.current = [];\n    message.success('New Sudoku ready — good luck!');\n    startTimer();\n  };\n\n  useEffect(() => {\n    // start first puzzle automatically\n    startNew(difficulty);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Timer helpers\n  const clearTimer = () => {\n    if (timerRef) {\n      window.clearInterval(timerRef);\n      setTimerRef(null);\n    }\n  };\n  const startTimer = () => {\n    if (timerRef) return;\n    const id = window.setInterval(() => setTimeSec((t) => t + 1), 1000);\n    setTimerRef(id);\n  };\n\n  useEffect(() => () => clearTimer(), []);\n\n  // Helpers: history for undo/redo\n  const pushHistory = (g: Cell[][]) => {\n    historyRef.current.push(cloneGrid(g));\n    if (historyRef.current.length > 200) historyRef.current.shift();\n    futureRef.current = [];\n  };\n\n  const undo = () => {\n    const h = historyRef.current;\n    if (!h.length) return message.info('Nothing to undo');\n    const last = h.pop()!;\n    futureRef.current.push(cloneGrid(grid));\n    setGrid(last);\n  };\n\n  const redo = () => {\n    const f = futureRef.current;\n    if (!f.length) return message.info('Nothing to redo');\n    const next = f.pop()!;\n    historyRef.current.push(cloneGrid(grid));\n    setGrid(next);\n  };\n\n  // Validate board and mark wrong cells\n  const validateBoard = (g: Cell[][]) => {\n    const mat = cellGridToNumbers(g);\n    const wrongSet = new Set<string>();\n    for (let r = 0; r < 9; r++) {\n      for (let c = 0; c < 9; c++) {\n        const v = mat[r][c];\n        if (v === 0) continue;\n        // Temporarily clear to check duplicates\n        mat[r][c] = 0;\n        if (!isSafe(mat, r, c, v)) wrongSet.add(`${r},${c}`);\n        mat[r][c] = v;\n      }\n    }\n\n    const newGrid = cloneGrid(g);\n    for (let r = 0; r < 9; r++)\n      for (let c = 0; c < 9; c++) newGrid[r][c].wrong = wrongSet.has(`${r},${c}`);\n    setGrid(newGrid);\n    if (wrongSet.size) message.error(`Found ${wrongSet.size} mistake(s)`);\n    else message.success('No obvious mistakes found');\n  };\n\n  // Fill a hint (one correct cell)\n  const hint = () => {\n    if (!solution) return message.error('No solution available');\n    const emptyCells: [number, number][] = [];\n    for (let r = 0; r < 9; r++)\n      for (let c = 0; c < 9; c++) if (!grid[r][c].value) emptyCells.push([r, c]);\n    if (!emptyCells.length) return message.info('Board already complete');\n    const [r, c] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    pushHistory(grid);\n    const g = cloneGrid(grid);\n    g[r][c].value = solution[r][c];\n    g[r][c].notes.clear();\n    setGrid(g);\n    futureRef.current = [];\n  };\n\n  // Solve entire board (fill with solution)\n  const solveAll = () => {\n    if (!solution) return message.error('No solution available');\n    pushHistory(grid);\n    setGrid(\n      numbersToCellGrid(\n        solution,\n        Array.from({ length: 9 }, () => Array(9).fill(true)),\n      ),\n    );\n    clearTimer();\n    setShowConfetti(true);\n    message.success('Solved (cheater mode)');\n  };\n\n  // On number input (from palette or keyboard)\n  const setNumberAt = (r: number, c: number, v: number | null) => {\n    const cell = grid[r][c];\n    if (cell.given) return;\n    pushHistory(grid);\n    const g = cloneGrid(grid);\n    const target = g[r][c];\n    if (v === null) {\n      target.value = null;\n      target.notes.clear();\n    } else if (notesMode) {\n      // toggle note\n      if (target.notes.has(v)) target.notes.delete(v);\n      else target.notes.add(v);\n    } else {\n      target.value = v;\n      target.notes.clear();\n    }\n\n    // After each input, check win\n    setGrid(g);\n    futureRef.current = [];\n\n    // quick win check\n    const mat = cellGridToNumbers(g);\n    if (mat.every((r) => r.every((c) => c !== 0))) {\n      // validate against solution\n      if (solution) {\n        const correct = mat.every((rr, ri) => rr.every((cc, ci) => cc === solution[ri][ci]));\n        if (correct) {\n          clearTimer();\n          setShowConfetti(true);\n          message.success('🎉 Puzzle solved — congratulations!');\n        } else {\n          validateBoard(g);\n        }\n      }\n    }\n  };\n\n  // Keyboard handling\n  useEffect(() => {\n    const handleKey = (e: KeyboardEvent) => {\n      if (!selected) return;\n      const [r, c] = selected;\n      if (e.key >= '1' && e.key <= '9') {\n        setNumberAt(r, c, Number(e.key));\n      } else if (e.key === 'Backspace' || e.key === 'Delete' || e.key === '0') {\n        setNumberAt(r, c, null);\n      } else if (e.key === 'n') {\n        setNotesMode((s) => !s);\n        message.info(`Notes mode ${!notesMode ? 'on' : 'off'}`);\n      }\n    };\n    window.addEventListener('keydown', handleKey);\n    return () => window.removeEventListener('keydown', handleKey);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selected, notesMode, grid, solution]);\n\n  // Small helpers for rendering\n  const cellClass = (cell: Cell) => {\n    const cls = ['sud-cell'];\n    if (cell.given) cls.push('sud-given');\n    if (cell.value && !cell.given) cls.push('sud-user');\n    if (cell.wrong) cls.push('sud-wrong');\n    return cls.join(' ');\n  };\n\n  // UI: render notes inside a cell\n  const renderNotes = (cell: Cell, size = 24) => {\n    const notes = Array.from(cell.notes).sort((a, b) => a - b);\n    if (!notes.length) return null;\n    const perRow = 3;\n    const fontSize = Math.max(8, Math.floor(size / 4));\n    return (\n      <div className=\"sud-notes\" style={{ fontSize }}>\n        {Array.from({ length: 9 }, (_, i) => (\n          <div key={i} className=\"sud-note-slot\">\n            {cell.notes.has(i + 1) ? i + 1 : ''}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"sud-page\">\n      {showConfetti && <Confetti />}\n      <Card className=\"sud-card\" bordered={false}>\n        <Row justify=\"space-between\" align=\"middle\">\n          <Col>\n            <Title level={3}>🧩 Sudoku</Title>\n\n            {/* --- Game Description --- */}\n            <Text\n              type=\"secondary\"\n              style={{\n                display: 'block',\n                marginTop: 8,\n                maxWidth: 640,\n                lineHeight: 1.6,\n              }}\n            >\n              Sudoku is a logic-based, combinatorial number-placement puzzle. In classic Sudoku, the\n              objective is to fill a 9 × 9 grid with digits so that each column, each row, and each\n              of the nine 3 × 3 subgrids that compose the grid contains all of the digits from 1 to\n              9.\n            </Text>\n            <Text type=\"secondary\">Responsive, notes, hints, undo/redo, and solver.</Text>\n          </Col>\n\n          <Col>\n            <Space wrap>\n              <Text>Difficulty</Text>\n              <Select value={difficulty} onChange={(val) => setDifficulty(val as Difficulty)}>\n                <Option value=\"easy\">Easy</Option>\n                <Option value=\"medium\">Medium</Option>\n                <Option value=\"hard\">Hard</Option>\n                <Option value=\"expert\">Expert</Option>\n              </Select>\n\n              <Button onClick={() => startNew(difficulty)} type=\"primary\">\n                New\n              </Button>\n\n              <Button onClick={() => undo()} icon={<UndoOutlined />} />\n              <Button onClick={() => redo()} icon={<RedoOutlined />} />\n\n              <Button onClick={() => validateBoard(grid)} icon={<CheckOutlined />} />\n              <Button onClick={() => hint()} icon={<AimOutlined />} />\n              <Button onClick={() => solveAll()} danger>\n                Solve\n              </Button>\n            </Space>\n          </Col>\n        </Row>\n\n        <div\n          style={{\n            marginTop: 12,\n            display: 'flex',\n            justifyContent: isMobile ? 'center' : 'flex-start',\n            gap: 16,\n          }}\n        >\n          <div className=\"sud-layout\">\n            <div className=\"sud-grid\">\n              {/* Sudoku grid */}\n              <div style={{ minWidth: 340 }}>\n                <div className=\"sud-grid\" role=\"grid\" aria-label=\"Sudoku board\">\n                  {grid.map((row, r) => (\n                    <div key={r} className=\"sud-row\">\n                      {row.map((cell, c) => (\n                        <div\n                          key={`${r}-${c}`}\n                          role=\"gridcell\"\n                          tabIndex={0}\n                          className={`${cellClass(cell)} ${\n                            selected && selected[0] === r && selected[1] === c ? 'sud-selected' : ''\n                          }`}\n                          onClick={() => setSelected([r, c])}\n                          onDoubleClick={() => setSelected([r, c])}\n                        >\n                          {cell.value ? (\n                            <div className=\"sud-val\">{cell.value}</div>\n                          ) : (\n                            <div className=\"sud-empty\">{renderNotes(cell)}</div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n\n                <div\n                  style={{\n                    marginTop: 8,\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                  }}\n                >\n                  <div>\n                    <Text strong>Time:</Text> <Text>{timeSec}s</Text>\n                  </div>\n\n                  <div>\n                    <Space>\n                      <Button onClick={() => setNotesMode((s) => !s)}>\n                        {notesMode ? 'Notes: ON' : 'Notes: OFF'}\n                      </Button>\n                      <Button\n                        onClick={() => setNumberAt(selected?.[0] ?? 0, selected?.[1] ?? 0, null)}\n                        icon={<DeleteOutlined />}\n                      >\n                        Erase\n                      </Button>\n                    </Space>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"sud-number-wrap\">\n              {/* Number palette */}\n              <div className=\"sud-number-palette\">\n                {Array.from({ length: 9 }, (_, i) => i + 1).map((n) => (\n                  <Button\n                    key={n}\n                    onClick={() => {\n                      if (!selected) return message.info('Select a cell first');\n                      setNumberAt(selected[0], selected[1], n);\n                    }}\n                  >\n                    {n}\n                  </Button>\n                ))}\n              </div>\n\n              <div className=\"sud-control-buttons\">\n                <Button onClick={() => hint()}>Hint</Button>\n                <Button onClick={() => validateBoard(grid)}>Validate</Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* --- How to Play Guide --- */}\n        <div style={{ marginTop: 24, paddingTop: 12, borderTop: '1px solid #f0f0f0' }}>\n          <Title level={4}>🧠 How to Play</Title>\n          <ul style={{ paddingLeft: 20, lineHeight: 1.7 }}>\n            <li>Click any empty cell to select it.</li>\n            <li>Use the number palette or keyboard (1–9) to fill in digits.</li>\n            <li>\n              Toggle <strong>Notes Mode</strong> to jot down possible numbers.\n            </li>\n            <li>\n              Click <strong>Validate</strong> to check for mistakes.\n            </li>\n            <li>\n              Use <strong>Undo</strong> and <strong>Redo</strong> to revert moves.\n            </li>\n            <li>\n              Click <strong>Hint</strong> to reveal a random correct number.\n            </li>\n            <li>You win when the entire grid is correctly filled!</li>\n          </ul>\n        </div>\n\n        <div style={{ marginTop: 12, textAlign: 'center' }}>\n          <Text type=\"secondary\">Made with ❤️ — responsive and keyboard friendly.</Text>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default SudokuPage;\n"],"names":[],"mappings":"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"}