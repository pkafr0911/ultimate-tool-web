{"version":3,"sources":["virtual:external_fs","node_modules/@ant-design/icons-svg/es/asn/HighlightOutlined.js","node_modules/@ant-design/icons/es/icons/HighlightOutlined.js","node_modules/@ant-design/icons-svg/es/asn/MinusOutlined.js","node_modules/@ant-design/icons/es/icons/MinusOutlined.js","node_modules/@ant-design/icons/es/icons/PlusOutlined.js","node_modules/antd/es/splitter/Panel.js","node_modules/antd/es/splitter/hooks/useItems.js","node_modules/antd/es/splitter/hooks/useSizes.js","node_modules/antd/es/splitter/SplitBar.js","node_modules/antd/es/splitter/style/index.js","node_modules/antd/es/splitter/index.js","node_modules/antd/es/splitter/Splitter.js","node_modules/antd/es/splitter/hooks/useResizable.js","node_modules/antd/es/splitter/hooks/useResize.js","/home/thanhnd/Downloads/code/ultimate-tool-web/src/pages/SVGViewer/styles.less?asmodule","src/pages/SVGViewer/index.tsx"],"sourcesContent":["module.exports = '';","// This icon file is generated automatically.\nvar HighlightOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M957.6 507.4L603.2 158.2a7.9 7.9 0 00-11.2 0L353.3 393.4a8.03 8.03 0 00-.1 11.3l.1.1 40 39.4-117.2 115.3a8.03 8.03 0 00-.1 11.3l.1.1 39.5 38.9-189.1 187H72.1c-4.4 0-8.1 3.6-8.1 8V860c0 4.4 3.6 8 8 8h344.9c2.1 0 4.1-.8 5.6-2.3l76.1-75.6 40.4 39.8a7.9 7.9 0 0011.2 0l117.1-115.6 40.1 39.5a7.9 7.9 0 0011.2 0l238.7-235.2c3.4-3 3.4-8 .3-11.2zM389.8 796.2H229.6l134.4-133 80.1 78.9-54.3 54.1zm154.8-62.1L373.2 565.2l68.6-67.6 171.4 168.9-68.6 67.6zM713.1 658L450.3 399.1 597.6 254l262.8 259-147.3 145z\" } }] }, \"name\": \"highlight\", \"theme\": \"outlined\" };\nexport default HighlightOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport HighlightOutlinedSvg from \"@ant-design/icons-svg/es/asn/HighlightOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar HighlightOutlined = function HighlightOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: HighlightOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(HighlightOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'HighlightOutlined';\n}\nexport default RefIcon;","// This icon file is generated automatically.\nvar MinusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"minus\", \"theme\": \"outlined\" };\nexport default MinusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar MinusOutlined = function MinusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MinusOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(MinusOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'MinusOutlined';\n}\nexport default RefIcon;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(PlusOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'PlusOutlined';\n}\nexport default RefIcon;","\"use client\";\n\nimport React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nexport const InternalPanel = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    prefixCls,\n    className,\n    children,\n    size,\n    style = {}\n  } = props;\n  const panelClassName = classNames(`${prefixCls}-panel`, {\n    [`${prefixCls}-panel-hidden`]: size === 0\n  }, className);\n  const hasSize = size !== undefined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: panelClassName,\n    style: Object.assign(Object.assign({}, style), {\n      // Use auto when start from ssr\n      flexBasis: hasSize ? size : 'auto',\n      flexGrow: hasSize ? 0 : 1\n    })\n  }, children);\n});\nif (process.env.NODE_ENV !== 'production') {\n  InternalPanel.displayName = 'Panel';\n}\nconst Panel = () => null;\nexport default Panel;","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nfunction getCollapsible(collapsible) {\n  if (collapsible && typeof collapsible === 'object') {\n    return collapsible;\n  }\n  const mergedCollapsible = !!collapsible;\n  return {\n    start: mergedCollapsible,\n    end: mergedCollapsible\n  };\n}\n/**\n * Convert `children` into `items`.\n */\nexport default function useItems(children) {\n  const items = React.useMemo(() => toArray(children).filter(React.isValidElement).map(node => {\n    const {\n      props\n    } = node;\n    const {\n        collapsible\n      } = props,\n      restProps = __rest(props, [\"collapsible\"]);\n    return Object.assign(Object.assign({}, restProps), {\n      collapsible: getCollapsible(collapsible)\n    });\n  }), [children]);\n  return items;\n}","import React from 'react';\nexport function getPtg(str) {\n  return Number(str.slice(0, -1)) / 100;\n}\nfunction isPtg(itemSize) {\n  return typeof itemSize === 'string' && itemSize.endsWith('%');\n}\n/**\n * Save the size state.\n * Align the size into flex percentage base.\n */\nexport default function useSizes(items, containerSize) {\n  const propSizes = items.map(item => item.size);\n  const itemsCount = items.length;\n  const mergedContainerSize = containerSize || 0;\n  const ptg2px = ptg => ptg * mergedContainerSize;\n  // We do not need care the size state match the `items` length in `useState`.\n  // It will calculate later.\n  const [innerSizes, setInnerSizes] = React.useState(() => items.map(item => item.defaultSize));\n  const sizes = React.useMemo(() => {\n    var _a;\n    const mergedSizes = [];\n    for (let i = 0; i < itemsCount; i += 1) {\n      mergedSizes[i] = (_a = propSizes[i]) !== null && _a !== void 0 ? _a : innerSizes[i];\n    }\n    return mergedSizes;\n  }, [itemsCount, innerSizes, propSizes]);\n  // Post handle the size. Will do:\n  // 1. Convert all the px into percentage if not empty.\n  // 2. Get rest percentage for exist percentage.\n  // 3. Fill the rest percentage into empty item.\n  const postPercentSizes = React.useMemo(() => {\n    let ptgList = [];\n    let emptyCount = 0;\n    // Fill default percentage\n    for (let i = 0; i < itemsCount; i += 1) {\n      const itemSize = sizes[i];\n      if (isPtg(itemSize)) {\n        ptgList[i] = getPtg(itemSize);\n      } else if (itemSize || itemSize === 0) {\n        const num = Number(itemSize);\n        if (!Number.isNaN(num)) {\n          ptgList[i] = num / mergedContainerSize;\n        }\n      } else {\n        emptyCount += 1;\n        ptgList[i] = undefined;\n      }\n    }\n    const totalPtg = ptgList.reduce((acc, ptg) => acc + (ptg || 0), 0);\n    if (totalPtg > 1 || !emptyCount) {\n      // If total percentage is larger than 1, we will scale it down.\n      const scale = 1 / totalPtg;\n      ptgList = ptgList.map(ptg => ptg === undefined ? 0 : ptg * scale);\n    } else {\n      // If total percentage is smaller than 1, we will fill the rest.\n      const avgRest = (1 - totalPtg) / emptyCount;\n      ptgList = ptgList.map(ptg => ptg === undefined ? avgRest : ptg);\n    }\n    return ptgList;\n  }, [sizes, mergedContainerSize]);\n  const postPxSizes = React.useMemo(() => postPercentSizes.map(ptg2px), [postPercentSizes, mergedContainerSize]);\n  const postPercentMinSizes = React.useMemo(() => items.map(item => {\n    if (isPtg(item.min)) {\n      return getPtg(item.min);\n    }\n    return (item.min || 0) / mergedContainerSize;\n  }), [items, mergedContainerSize]);\n  const postPercentMaxSizes = React.useMemo(() => items.map(item => {\n    if (isPtg(item.max)) {\n      return getPtg(item.max);\n    }\n    return (item.max || mergedContainerSize) / mergedContainerSize;\n  }), [items, mergedContainerSize]);\n  // If ssr, we will use the size from developer config first.\n  const panelSizes = React.useMemo(() => containerSize ? postPxSizes : sizes, [postPxSizes, containerSize]);\n  return [panelSizes, postPxSizes, postPercentSizes, postPercentMinSizes, postPercentMaxSizes, setInnerSizes];\n}","\"use client\";\n\nimport React, { useState } from 'react';\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport LeftOutlined from \"@ant-design/icons/es/icons/LeftOutlined\";\nimport RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport UpOutlined from \"@ant-design/icons/es/icons/UpOutlined\";\nimport classNames from 'classnames';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nfunction getValidNumber(num) {\n  return typeof num === 'number' && !Number.isNaN(num) ? Math.round(num) : 0;\n}\nconst SplitBar = props => {\n  const {\n    prefixCls,\n    vertical,\n    index,\n    active,\n    ariaNow,\n    ariaMin,\n    ariaMax,\n    resizable,\n    startCollapsible,\n    endCollapsible,\n    onOffsetStart,\n    onOffsetUpdate,\n    onOffsetEnd,\n    onCollapse,\n    lazy,\n    containerSize\n  } = props;\n  const splitBarPrefixCls = `${prefixCls}-bar`;\n  // ======================== Resize ========================\n  const [startPos, setStartPos] = useState(null);\n  const [constrainedOffset, setConstrainedOffset] = useState(0);\n  const constrainedOffsetX = vertical ? 0 : constrainedOffset;\n  const constrainedOffsetY = vertical ? constrainedOffset : 0;\n  const onMouseDown = e => {\n    if (resizable && e.currentTarget) {\n      setStartPos([e.pageX, e.pageY]);\n      onOffsetStart(index);\n    }\n  };\n  const onTouchStart = e => {\n    if (resizable && e.touches.length === 1) {\n      const touch = e.touches[0];\n      setStartPos([touch.pageX, touch.pageY]);\n      onOffsetStart(index);\n    }\n  };\n  // Updated constraint calculation\n  const getConstrainedOffset = rawOffset => {\n    const currentPos = containerSize * ariaNow / 100;\n    const newPos = currentPos + rawOffset;\n    // Calculate available space\n    const minAllowed = Math.max(0, containerSize * ariaMin / 100);\n    const maxAllowed = Math.min(containerSize, containerSize * ariaMax / 100);\n    // Constrain new position within bounds\n    const clampedPos = Math.max(minAllowed, Math.min(maxAllowed, newPos));\n    return clampedPos - currentPos;\n  };\n  const handleLazyMove = useEvent((offsetX, offsetY) => {\n    const constrainedOffsetValue = getConstrainedOffset(vertical ? offsetY : offsetX);\n    setConstrainedOffset(constrainedOffsetValue);\n  });\n  const handleLazyEnd = useEvent(() => {\n    onOffsetUpdate(index, constrainedOffsetX, constrainedOffsetY);\n    setConstrainedOffset(0);\n  });\n  React.useEffect(() => {\n    if (startPos) {\n      const onMouseMove = e => {\n        const {\n          pageX,\n          pageY\n        } = e;\n        const offsetX = pageX - startPos[0];\n        const offsetY = pageY - startPos[1];\n        if (lazy) {\n          handleLazyMove(offsetX, offsetY);\n        } else {\n          onOffsetUpdate(index, offsetX, offsetY);\n        }\n      };\n      const onMouseUp = () => {\n        if (lazy) {\n          handleLazyEnd();\n        }\n        setStartPos(null);\n        onOffsetEnd();\n      };\n      const handleTouchMove = e => {\n        if (e.touches.length === 1) {\n          const touch = e.touches[0];\n          const offsetX = touch.pageX - startPos[0];\n          const offsetY = touch.pageY - startPos[1];\n          if (lazy) {\n            handleLazyMove(offsetX, offsetY);\n          } else {\n            onOffsetUpdate(index, offsetX, offsetY);\n          }\n        }\n      };\n      const handleTouchEnd = () => {\n        if (lazy) {\n          handleLazyEnd();\n        }\n        setStartPos(null);\n        onOffsetEnd();\n      };\n      window.addEventListener('touchmove', handleTouchMove);\n      window.addEventListener('touchend', handleTouchEnd);\n      window.addEventListener('mousemove', onMouseMove);\n      window.addEventListener('mouseup', onMouseUp);\n      return () => {\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n        window.removeEventListener('touchmove', handleTouchMove);\n        window.removeEventListener('touchend', handleTouchEnd);\n      };\n    }\n  }, [startPos, lazy, vertical, index, containerSize, ariaNow, ariaMin, ariaMax]);\n  const transformStyle = {\n    [`--${splitBarPrefixCls}-preview-offset`]: `${constrainedOffset}px`\n  };\n  // ======================== Render ========================\n  const StartIcon = vertical ? UpOutlined : LeftOutlined;\n  const EndIcon = vertical ? DownOutlined : RightOutlined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: splitBarPrefixCls,\n    role: \"separator\",\n    \"aria-valuenow\": getValidNumber(ariaNow),\n    \"aria-valuemin\": getValidNumber(ariaMin),\n    \"aria-valuemax\": getValidNumber(ariaMax)\n  }, lazy && (/*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${splitBarPrefixCls}-preview`, {\n      [`${splitBarPrefixCls}-preview-active`]: !!constrainedOffset\n    }),\n    style: transformStyle\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${splitBarPrefixCls}-dragger`, {\n      [`${splitBarPrefixCls}-dragger-disabled`]: !resizable,\n      [`${splitBarPrefixCls}-dragger-active`]: active\n    }),\n    onMouseDown: onMouseDown,\n    onTouchStart: onTouchStart\n  }), startCollapsible && (/*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${splitBarPrefixCls}-collapse-bar`, `${splitBarPrefixCls}-collapse-bar-start`),\n    onClick: () => onCollapse(index, 'start')\n  }, /*#__PURE__*/React.createElement(StartIcon, {\n    className: classNames(`${splitBarPrefixCls}-collapse-icon`, `${splitBarPrefixCls}-collapse-start`)\n  }))), endCollapsible && (/*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${splitBarPrefixCls}-collapse-bar`, `${splitBarPrefixCls}-collapse-bar-end`),\n    onClick: () => onCollapse(index, 'end')\n  }, /*#__PURE__*/React.createElement(EndIcon, {\n    className: classNames(`${splitBarPrefixCls}-collapse-icon`, `${splitBarPrefixCls}-collapse-end`)\n  }))));\n};\nexport default SplitBar;","import { resetComponent } from '../../style';\nimport { genStyleHooks } from '../../theme/internal';\nconst genRtlStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`&-rtl${componentCls}-horizontal`]: {\n      [`> ${componentCls}-bar`]: {\n        [`${componentCls}-bar-collapse-previous`]: {\n          insetInlineEnd: 0,\n          insetInlineStart: 'unset'\n        },\n        [`${componentCls}-bar-collapse-next`]: {\n          insetInlineEnd: 'unset',\n          insetInlineStart: 0\n        }\n      }\n    },\n    [`&-rtl${componentCls}-vertical`]: {\n      [`> ${componentCls}-bar`]: {\n        [`${componentCls}-bar-collapse-previous`]: {\n          insetInlineEnd: '50%',\n          insetInlineStart: 'unset'\n        },\n        [`${componentCls}-bar-collapse-next`]: {\n          insetInlineEnd: '50%',\n          insetInlineStart: 'unset'\n        }\n      }\n    }\n  };\n};\nconst centerStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: {\n    _skip_check_: true,\n    value: '50%'\n  },\n  transform: 'translate(-50%, -50%)'\n};\nconst genSplitterStyle = token => {\n  const {\n    componentCls,\n    colorFill,\n    splitBarDraggableSize,\n    splitBarSize,\n    splitTriggerSize,\n    controlItemBgHover,\n    controlItemBgActive,\n    controlItemBgActiveHover,\n    prefixCls\n  } = token;\n  const splitBarCls = `${componentCls}-bar`;\n  const splitMaskCls = `${componentCls}-mask`;\n  const splitPanelCls = `${componentCls}-panel`;\n  const halfTriggerSize = token.calc(splitTriggerSize).div(2).equal();\n  const splitterBarPreviewOffsetVar = `${prefixCls}-bar-preview-offset`;\n  const splitterBarPreviewStyle = {\n    position: 'absolute',\n    background: token.colorPrimary,\n    opacity: 0.2,\n    pointerEvents: 'none',\n    transition: 'none',\n    zIndex: 1,\n    display: 'none'\n  };\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'flex',\n      width: '100%',\n      height: '100%',\n      alignItems: 'stretch',\n      // ======================== SplitBar ========================\n      // Use `>` to avoid conflict with mix layout\n      [`> ${splitBarCls}`]: {\n        flex: 'none',\n        position: 'relative',\n        userSelect: 'none',\n        // ======================= Dragger =======================\n        [`${splitBarCls}-dragger`]: Object.assign(Object.assign({}, centerStyle), {\n          zIndex: 1,\n          // Hover background\n          '&::before': Object.assign({\n            content: '\"\"',\n            background: controlItemBgHover\n          }, centerStyle),\n          // Spinner\n          '&::after': Object.assign({\n            content: '\"\"',\n            background: colorFill\n          }, centerStyle),\n          // Hover\n          [`&:hover:not(${splitBarCls}-dragger-active)`]: {\n            '&::before': {\n              background: controlItemBgActive\n            }\n          },\n          // Active\n          '&-active': {\n            zIndex: 2,\n            '&::before': {\n              background: controlItemBgActiveHover\n            }\n          },\n          // Disabled, not use `pointer-events: none` since still need trigger collapse\n          [`&-disabled${splitBarCls}-dragger`]: {\n            zIndex: 0,\n            '&, &:hover, &-active': {\n              cursor: 'default',\n              '&::before': {\n                background: controlItemBgHover\n              }\n            },\n            '&::after': {\n              display: 'none'\n            }\n          }\n        }),\n        // ======================= Collapse =======================\n        [`${splitBarCls}-collapse-bar`]: Object.assign(Object.assign({}, centerStyle), {\n          zIndex: token.zIndexPopupBase,\n          background: controlItemBgHover,\n          fontSize: token.fontSizeSM,\n          borderRadius: token.borderRadiusXS,\n          color: token.colorText,\n          cursor: 'pointer',\n          opacity: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          // Hover\n          '&:hover': {\n            background: controlItemBgActive\n          },\n          // Active\n          '&:active': {\n            background: controlItemBgActiveHover\n          }\n        }),\n        // ======================== Status ========================\n        // Hover\n        '&:hover, &:active': {\n          [`${splitBarCls}-collapse-bar`]: {\n            opacity: 1\n          }\n        }\n      },\n      // =========================== Mask =========================\n      // Util dom for handle cursor\n      [splitMaskCls]: {\n        position: 'fixed',\n        zIndex: token.zIndexPopupBase,\n        inset: 0,\n        '&-horizontal': {\n          cursor: 'col-resize'\n        },\n        '&-vertical': {\n          cursor: 'row-resize'\n        }\n      },\n      // ==========================================================\n      // ==                        Layout                        ==\n      // ==========================================================\n      '&-horizontal': {\n        flexDirection: 'row',\n        [`> ${splitBarCls}`]: {\n          width: 0,\n          // ======================= Preview =======================\n          [`${splitBarCls}-preview`]: Object.assign(Object.assign({\n            height: '100%',\n            width: splitBarSize\n          }, splitterBarPreviewStyle), {\n            [`&${splitBarCls}-preview-active`]: {\n              display: 'block',\n              transform: `translateX(var(--${splitterBarPreviewOffsetVar}))`\n            }\n          }),\n          // ======================= Dragger =======================\n          [`${splitBarCls}-dragger`]: {\n            cursor: 'col-resize',\n            height: '100%',\n            width: splitTriggerSize,\n            '&::before': {\n              height: '100%',\n              width: splitBarSize\n            },\n            '&::after': {\n              height: splitBarDraggableSize,\n              width: splitBarSize\n            }\n          },\n          // ======================= Collapse =======================\n          [`${splitBarCls}-collapse-bar`]: {\n            width: token.fontSizeSM,\n            height: token.controlHeightSM,\n            '&-start': {\n              left: {\n                _skip_check_: true,\n                value: 'auto'\n              },\n              right: {\n                _skip_check_: true,\n                value: halfTriggerSize\n              },\n              transform: 'translateY(-50%)'\n            },\n            '&-end': {\n              left: {\n                _skip_check_: true,\n                value: halfTriggerSize\n              },\n              right: {\n                _skip_check_: true,\n                value: 'auto'\n              },\n              transform: 'translateY(-50%)'\n            }\n          }\n        }\n      },\n      '&-vertical': {\n        flexDirection: 'column',\n        [`> ${splitBarCls}`]: {\n          height: 0,\n          // ======================= Preview =======================\n          [`${splitBarCls}-preview`]: Object.assign(Object.assign({\n            height: splitBarSize,\n            width: '100%'\n          }, splitterBarPreviewStyle), {\n            [`&${splitBarCls}-preview-active`]: {\n              display: 'block',\n              transform: `translateY(var(--${splitterBarPreviewOffsetVar}))`\n            }\n          }),\n          // ======================= Dragger =======================\n          [`${splitBarCls}-dragger`]: {\n            cursor: 'row-resize',\n            width: '100%',\n            height: splitTriggerSize,\n            '&::before': {\n              width: '100%',\n              height: splitBarSize\n            },\n            '&::after': {\n              width: splitBarDraggableSize,\n              height: splitBarSize\n            }\n          },\n          // ======================= Collapse =======================\n          [`${splitBarCls}-collapse-bar`]: {\n            height: token.fontSizeSM,\n            width: token.controlHeightSM,\n            '&-start': {\n              top: 'auto',\n              bottom: halfTriggerSize,\n              transform: 'translateX(-50%)'\n            },\n            '&-end': {\n              top: halfTriggerSize,\n              bottom: 'auto',\n              transform: 'translateX(-50%)'\n            }\n          }\n        }\n      },\n      // ========================= Panels =========================\n      [splitPanelCls]: {\n        overflow: 'auto',\n        padding: '0 1px',\n        scrollbarWidth: 'thin',\n        boxSizing: 'border-box',\n        '&-hidden': {\n          padding: 0,\n          overflow: 'hidden'\n        },\n        [`&:has(${componentCls}:only-child)`]: {\n          overflow: 'hidden'\n        }\n      }\n    }), genRtlStyle(token))\n  };\n};\nexport const prepareComponentToken = token => {\n  var _a;\n  const splitBarSize = token.splitBarSize || 2;\n  const splitTriggerSize = token.splitTriggerSize || 6;\n  // https://github.com/ant-design/ant-design/pull/51223\n  const resizeSpinnerSize = token.resizeSpinnerSize || 20;\n  const splitBarDraggableSize = (_a = token.splitBarDraggableSize) !== null && _a !== void 0 ? _a : resizeSpinnerSize;\n  return {\n    splitBarSize,\n    splitTriggerSize,\n    splitBarDraggableSize,\n    resizeSpinnerSize\n  };\n};\n// ============================== Export ==============================\nexport default genStyleHooks('Splitter', token => [genSplitterStyle(token)], prepareComponentToken);","\"use client\";\n\nimport Panel from './Panel';\nimport SplitterComp from './Splitter';\nconst Splitter = SplitterComp;\nSplitter.Panel = Panel;\nexport default Splitter;","\"use client\";\n\n/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport { devUseWarning } from '../_util/warning';\nimport { useComponentConfig } from '../config-provider/context';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useItems from './hooks/useItems';\nimport useResizable from './hooks/useResizable';\nimport useResize from './hooks/useResize';\nimport useSizes from './hooks/useSizes';\nimport { InternalPanel } from './Panel';\nimport SplitBar from './SplitBar';\nimport useStyle from './style';\nconst Splitter = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    style,\n    layout = 'horizontal',\n    children,\n    rootClassName,\n    onResizeStart,\n    onResize,\n    onResizeEnd,\n    lazy\n  } = props;\n  const {\n    getPrefixCls,\n    direction,\n    className: contextClassName,\n    style: contextStyle\n  } = useComponentConfig('splitter');\n  const prefixCls = getPrefixCls('splitter', customizePrefixCls);\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  // ======================== Direct ========================\n  const isVertical = layout === 'vertical';\n  const isRTL = direction === 'rtl';\n  const reverse = !isVertical && isRTL;\n  // ====================== Items Data ======================\n  const items = useItems(children);\n  // >>> Warning for uncontrolled\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Splitter');\n    let existSize = false;\n    let existUndefinedSize = false;\n    items.forEach(item => {\n      if (item.size !== undefined) {\n        existSize = true;\n      } else {\n        existUndefinedSize = true;\n      }\n    });\n    if (existSize && existUndefinedSize && !onResize) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', 'When part of `Splitter.Panel` has `size`, `onResize` is required or change `size` to `defaultSize`.') : void 0;\n    }\n  }\n  // ====================== Container =======================\n  const [containerSize, setContainerSize] = useState();\n  const onContainerResize = size => {\n    const {\n      offsetWidth,\n      offsetHeight\n    } = size;\n    const containerSize = isVertical ? offsetHeight : offsetWidth;\n    // Skip when container has no size, Such as nested in a hidden tab panel\n    // to fix: https://github.com/ant-design/ant-design/issues/51106\n    if (containerSize === 0) {\n      return;\n    }\n    setContainerSize(containerSize);\n  };\n  // ========================= Size =========================\n  const [panelSizes, itemPxSizes, itemPtgSizes, itemPtgMinSizes, itemPtgMaxSizes, updateSizes] = useSizes(items, containerSize);\n  // ====================== Resizable =======================\n  const resizableInfos = useResizable(items, itemPxSizes, isRTL);\n  const [onOffsetStart, onOffsetUpdate, onOffsetEnd, onCollapse, movingIndex] = useResize(items, resizableInfos, itemPtgSizes, containerSize, updateSizes, isRTL);\n  // ======================== Events ========================\n  const onInternalResizeStart = useEvent(index => {\n    onOffsetStart(index);\n    onResizeStart === null || onResizeStart === void 0 ? void 0 : onResizeStart(itemPxSizes);\n  });\n  const onInternalResizeUpdate = useEvent((index, offset) => {\n    const nextSizes = onOffsetUpdate(index, offset);\n    onResize === null || onResize === void 0 ? void 0 : onResize(nextSizes);\n  });\n  const onInternalResizeEnd = useEvent(() => {\n    onOffsetEnd();\n    onResizeEnd === null || onResizeEnd === void 0 ? void 0 : onResizeEnd(itemPxSizes);\n  });\n  const onInternalCollapse = useEvent((index, type) => {\n    const nextSizes = onCollapse(index, type);\n    onResize === null || onResize === void 0 ? void 0 : onResize(nextSizes);\n    onResizeEnd === null || onResizeEnd === void 0 ? void 0 : onResizeEnd(nextSizes);\n  });\n  // ======================== Styles ========================\n  const containerClassName = classNames(prefixCls, className, `${prefixCls}-${layout}`, {\n    [`${prefixCls}-rtl`]: isRTL\n  }, rootClassName, contextClassName, cssVarCls, rootCls, hashId);\n  // ======================== Render ========================\n  const maskCls = `${prefixCls}-mask`;\n  const stackSizes = React.useMemo(() => {\n    const mergedSizes = [];\n    let stack = 0;\n    for (let i = 0; i < items.length; i += 1) {\n      stack += itemPtgSizes[i];\n      mergedSizes.push(stack);\n    }\n    return mergedSizes;\n  }, [itemPtgSizes]);\n  const mergedStyle = Object.assign(Object.assign({}, contextStyle), style);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onContainerResize\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: mergedStyle,\n    className: containerClassName\n  }, items.map((item, idx) => {\n    // Panel\n    const panel = /*#__PURE__*/React.createElement(InternalPanel, Object.assign({}, item, {\n      prefixCls: prefixCls,\n      size: panelSizes[idx]\n    }));\n    // Split Bar\n    let splitBar = null;\n    const resizableInfo = resizableInfos[idx];\n    if (resizableInfo) {\n      const ariaMinStart = (stackSizes[idx - 1] || 0) + itemPtgMinSizes[idx];\n      const ariaMinEnd = (stackSizes[idx + 1] || 100) - itemPtgMaxSizes[idx + 1];\n      const ariaMaxStart = (stackSizes[idx - 1] || 0) + itemPtgMaxSizes[idx];\n      const ariaMaxEnd = (stackSizes[idx + 1] || 100) - itemPtgMinSizes[idx + 1];\n      splitBar = /*#__PURE__*/React.createElement(SplitBar, {\n        lazy: lazy,\n        index: idx,\n        active: movingIndex === idx,\n        prefixCls: prefixCls,\n        vertical: isVertical,\n        resizable: resizableInfo.resizable,\n        ariaNow: stackSizes[idx] * 100,\n        ariaMin: Math.max(ariaMinStart, ariaMinEnd) * 100,\n        ariaMax: Math.min(ariaMaxStart, ariaMaxEnd) * 100,\n        startCollapsible: resizableInfo.startCollapsible,\n        endCollapsible: resizableInfo.endCollapsible,\n        onOffsetStart: onInternalResizeStart,\n        onOffsetUpdate: (index, offsetX, offsetY) => {\n          let offset = isVertical ? offsetY : offsetX;\n          if (reverse) {\n            offset = -offset;\n          }\n          onInternalResizeUpdate(index, offset);\n        },\n        onOffsetEnd: onInternalResizeEnd,\n        onCollapse: onInternalCollapse,\n        containerSize: containerSize || 0\n      });\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: `split-panel-${idx}`\n    }, panel, splitBar);\n  }), typeof movingIndex === 'number' && (/*#__PURE__*/React.createElement(\"div\", {\n    \"aria-hidden\": true,\n    className: classNames(maskCls, `${maskCls}-${layout}`)\n  })))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Splitter.displayName = 'Splitter';\n}\nexport default Splitter;","import * as React from 'react';\nexport default function useResizable(items, pxSizes, isRTL) {\n  return React.useMemo(() => {\n    const resizeInfos = [];\n    for (let i = 0; i < items.length - 1; i += 1) {\n      const prevItem = items[i];\n      const nextItem = items[i + 1];\n      const prevSize = pxSizes[i];\n      const nextSize = pxSizes[i + 1];\n      const {\n        resizable: prevResizable = true,\n        min: prevMin,\n        collapsible: prevCollapsible\n      } = prevItem;\n      const {\n        resizable: nextResizable = true,\n        min: nextMin,\n        collapsible: nextCollapsible\n      } = nextItem;\n      const mergedResizable =\n      // Both need to be resizable\n      prevResizable && nextResizable && (\n      // Prev is not collapsed and limit min size\n      prevSize !== 0 || !prevMin) && (\n      // Next is not collapsed and limit min size\n      nextSize !== 0 || !nextMin);\n      const startCollapsible =\n      // Self is collapsible\n      prevCollapsible.end && prevSize > 0 ||\n      // Collapsed and can be collapsed\n      nextCollapsible.start && nextSize === 0 && prevSize > 0;\n      const endCollapsible =\n      // Self is collapsible\n      nextCollapsible.start && nextSize > 0 ||\n      // Collapsed and can be collapsed\n      prevCollapsible.end && prevSize === 0 && nextSize > 0;\n      resizeInfos[i] = {\n        resizable: mergedResizable,\n        startCollapsible: !!(isRTL ? endCollapsible : startCollapsible),\n        endCollapsible: !!(isRTL ? startCollapsible : endCollapsible)\n      };\n    }\n    return resizeInfos;\n  }, [pxSizes, items]);\n}","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport { getPtg } from './useSizes';\n/**\n * Handle user drag resize logic.\n */\nexport default function useResize(items, resizableInfos, percentSizes, containerSize, updateSizes, isRTL) {\n  const limitSizes = items.map(item => [item.min, item.max]);\n  const mergedContainerSize = containerSize || 0;\n  const ptg2px = ptg => ptg * mergedContainerSize;\n  // ======================== Resize ========================\n  function getLimitSize(str, defaultLimit) {\n    if (typeof str === 'string') {\n      return ptg2px(getPtg(str));\n    }\n    return str !== null && str !== void 0 ? str : defaultLimit;\n  }\n  // Real px sizes\n  const [cacheSizes, setCacheSizes] = React.useState([]);\n  const cacheCollapsedSize = React.useRef([]);\n  /**\n   * When start drag, check the direct is `start` or `end`.\n   * This will handle when 2 splitter bar are in the same position.\n   */\n  const [movingIndex, setMovingIndex] = React.useState(null);\n  const getPxSizes = () => percentSizes.map(ptg2px);\n  const onOffsetStart = index => {\n    setCacheSizes(getPxSizes());\n    setMovingIndex({\n      index,\n      confirmed: false\n    });\n  };\n  const onOffsetUpdate = (index, offset) => {\n    var _a;\n    // First time trigger move index update is not sync in the state\n    let confirmedIndex = null;\n    // We need to know what the real index is.\n    if ((!movingIndex || !movingIndex.confirmed) && offset !== 0) {\n      // Search for the real index\n      if (offset > 0) {\n        confirmedIndex = index;\n        setMovingIndex({\n          index,\n          confirmed: true\n        });\n      } else {\n        for (let i = index; i >= 0; i -= 1) {\n          if (cacheSizes[i] > 0 && resizableInfos[i].resizable) {\n            confirmedIndex = i;\n            setMovingIndex({\n              index: i,\n              confirmed: true\n            });\n            break;\n          }\n        }\n      }\n    }\n    const mergedIndex = (_a = confirmedIndex !== null && confirmedIndex !== void 0 ? confirmedIndex : movingIndex === null || movingIndex === void 0 ? void 0 : movingIndex.index) !== null && _a !== void 0 ? _a : index;\n    const numSizes = _toConsumableArray(cacheSizes);\n    const nextIndex = mergedIndex + 1;\n    // Get boundary\n    const startMinSize = getLimitSize(limitSizes[mergedIndex][0], 0);\n    const endMinSize = getLimitSize(limitSizes[nextIndex][0], 0);\n    const startMaxSize = getLimitSize(limitSizes[mergedIndex][1], mergedContainerSize);\n    const endMaxSize = getLimitSize(limitSizes[nextIndex][1], mergedContainerSize);\n    let mergedOffset = offset;\n    // Align with the boundary\n    if (numSizes[mergedIndex] + mergedOffset < startMinSize) {\n      mergedOffset = startMinSize - numSizes[mergedIndex];\n    }\n    if (numSizes[nextIndex] - mergedOffset < endMinSize) {\n      mergedOffset = numSizes[nextIndex] - endMinSize;\n    }\n    if (numSizes[mergedIndex] + mergedOffset > startMaxSize) {\n      mergedOffset = startMaxSize - numSizes[mergedIndex];\n    }\n    if (numSizes[nextIndex] - mergedOffset > endMaxSize) {\n      mergedOffset = numSizes[nextIndex] - endMaxSize;\n    }\n    // Do offset\n    numSizes[mergedIndex] += mergedOffset;\n    numSizes[nextIndex] -= mergedOffset;\n    updateSizes(numSizes);\n    return numSizes;\n  };\n  const onOffsetEnd = () => {\n    setMovingIndex(null);\n  };\n  // ======================= Collapse =======================\n  const onCollapse = (index, type) => {\n    const currentSizes = getPxSizes();\n    const adjustedType = isRTL ? type === 'start' ? 'end' : 'start' : type;\n    const currentIndex = adjustedType === 'start' ? index : index + 1;\n    const targetIndex = adjustedType === 'start' ? index + 1 : index;\n    const currentSize = currentSizes[currentIndex];\n    const targetSize = currentSizes[targetIndex];\n    if (currentSize !== 0 && targetSize !== 0) {\n      // Collapse directly\n      currentSizes[currentIndex] = 0;\n      currentSizes[targetIndex] += currentSize;\n      cacheCollapsedSize.current[index] = currentSize;\n    } else {\n      const totalSize = currentSize + targetSize;\n      const currentSizeMin = getLimitSize(limitSizes[currentIndex][0], 0);\n      const currentSizeMax = getLimitSize(limitSizes[currentIndex][1], mergedContainerSize);\n      const targetSizeMin = getLimitSize(limitSizes[targetIndex][0], 0);\n      const targetSizeMax = getLimitSize(limitSizes[targetIndex][1], mergedContainerSize);\n      const limitStart = Math.max(currentSizeMin, totalSize - targetSizeMax);\n      const limitEnd = Math.min(currentSizeMax, totalSize - targetSizeMin);\n      const halfOffset = (limitEnd - limitStart) / 2;\n      const targetCacheCollapsedSize = cacheCollapsedSize.current[index];\n      const currentCacheCollapsedSize = totalSize - targetCacheCollapsedSize;\n      const shouldUseCache = targetCacheCollapsedSize && targetCacheCollapsedSize <= targetSizeMax && targetCacheCollapsedSize >= targetSizeMin && currentCacheCollapsedSize <= currentSizeMax && currentCacheCollapsedSize >= currentSizeMin;\n      if (shouldUseCache) {\n        currentSizes[targetIndex] = targetCacheCollapsedSize;\n        currentSizes[currentIndex] = currentCacheCollapsedSize;\n      } else {\n        currentSizes[currentIndex] -= halfOffset;\n        currentSizes[targetIndex] += halfOffset;\n      }\n    }\n    updateSizes(currentSizes);\n    return currentSizes;\n  };\n  return [onOffsetStart, onOffsetUpdate, onOffsetEnd, onCollapse, movingIndex === null || movingIndex === void 0 ? void 0 : movingIndex.index];\n}","\nimport \"/home/thanhnd/Downloads/code/ultimate-tool-web/src/pages/SVGViewer/styles.less?modules\";\nexport default {\"container\": `container-ifNp8X8v`,\"black\": `black-dzYcsv8L`,\"white\": `white-g7ji-nsv`,\"previewSection\": `previewSection-GnZ3WSda`,\"topActions\": `topActions-UFx2oxkx`,\"actions\": `actions-66jwCBOd`,\"previewTabs\": `previewTabs-U_y_MWg8`,\"ant-tabs-content-holder\": `ant-tabs-content-holder-L5RM32NU`,\"previewFooter\": `previewFooter-vj4VT2rT`,\"grey\": `grey-uQ7R7QeA`,\"previewWrapper\": `previewWrapper-BjYbvX_x`,\"editorBox\": `editorBox-3UW17M3X`,\"editorSection\": `editorSection-QVl5cWPc`,\"transparent\": `transparent-P7OSMWzA`,\"previewActions\": `previewActions-CkErfeph`,\"ant-tabs-content\": `ant-tabs-content-K3XRNHSw`,\"content\": `content-MeCNiq_y`,\"previewCodeBox\": `previewCodeBox-TPkKQJk7`}\n","import { handleCopy } from '@/helpers'; // Import custom copy helper\nimport {\n  CompressOutlined,\n  CopyOutlined,\n  DeleteOutlined,\n  DownloadOutlined,\n  HighlightOutlined,\n  MinusOutlined,\n  PlusOutlined,\n  SwapOutlined,\n  SyncOutlined,\n  UploadOutlined,\n} from '@ant-design/icons'; // Import icons\nimport { Editor } from '@monaco-editor/react'; // Import Monaco Editor component\nimport {\n  Button,\n  Card,\n  Input,\n  message,\n  Segmented,\n  Space,\n  Splitter,\n  Tabs,\n  Tooltip,\n  Typography,\n  Upload,\n} from 'antd'; // Import Ant Design components\nimport React, { useEffect, useRef, useState } from 'react'; // Import React and useState hook\nimport { optimize } from 'svgo'; // Import SVG optimizer\nimport styles from './styles.less'; // Import CSS module\n\nconst { Text } = Typography; // Destructure Text component from Typography\n\nconst SVGViewer: React.FC = () => {\n  // --- State variables ---\n  const [svgCode, setSvgCode] = useState<string>(''); // Store the raw SVG code\n  const [preview, setPreview] = useState<string>(''); // Store SVG preview HTML\n  const [pngPreview, setPngPreview] = useState<string>('');\n  const [icoPreview, setIcoPreview] = useState<string>('');\n  const [bgMode, setBgMode] = useState<'transparent' | 'white' | 'black' | 'grey'>('grey'); // Background mode\n  const [sizeInfo, setSizeInfo] = useState<{ before: number; after?: number } | null>(null); // Store size info before/after optimization\n  const [activeTab, setActiveTab] = useState<string>('svg'); // Active preview tab\n  const [dragging, setDragging] = useState(false);\n  const [svgSize, setSvgSize] = useState<{ width: string; height: string }>({\n    width: '',\n    height: '',\n  }); // Store detected or custom SVG width/height\n\n  const [zoom, setZoom] = useState(1); // 1 = 100%\n  const handleZoomIn = () => setZoom((z) => Math.min(z + 0.1, 3)); // up to 300%\n  const handleZoomOut = () => setZoom((z) => Math.max(z - 0.1, 0.2)); // down to 20%\n  const handleResetZoom = () => setZoom(1);\n\n  // Check in using Mobile\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => setIsMobile(window.innerWidth <= 768);\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const dragCounter = useRef(0);\n  // place this near the top of your component, under useState declarations:\n  const debounceTimeout = useRef<NodeJS.Timeout | null>(null);\n\n  // --- Function to handle SVG file upload ---\n  const handleUpload = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const result = e.target?.result as string;\n      if (!result.includes('<svg')) {\n        message.error('Invalid SVG file');\n        return;\n      }\n\n      const newContent = result.trim();\n      let combinedSvg = '';\n\n      if (svgCode.trim()) {\n        // Append new SVG below existing one\n        combinedSvg = `${svgCode.trim()}\\n\\n<!-- New SVG appended -->\\n${newContent}`;\n      } else {\n        combinedSvg = newContent;\n      }\n\n      setSvgCode(combinedSvg);\n      setPreview(combinedSvg);\n\n      extractSize(combinedSvg); // Auto-detect width & height\n\n      // Update combined file size\n      setSizeInfo({ before: new Blob([combinedSvg]).size });\n      message.success(svgCode ? 'Appended new SVG!' : 'SVG loaded!');\n    };\n    reader.readAsText(file);\n    return false;\n  };\n\n  // --- Debounced Resize ---\n  const debouncedResize = (width: string, height: string) => {\n    if (debounceTimeout.current) clearTimeout(debounceTimeout.current);\n    debounceTimeout.current = setTimeout(() => {\n      if (width && height) handleResize(width, height);\n    }, 500); // waits 500ms after typing stops\n  };\n\n  // --- Extract width and height from SVG code ---\n  const extractSize = (code: string) => {\n    const widthMatch = code.match(/width=\"([^\"]+)\"/);\n    const heightMatch = code.match(/height=\"([^\"]+)\"/);\n    setSvgSize({\n      width: widthMatch ? widthMatch[1] : '',\n      height: heightMatch ? heightMatch[1] : '',\n    });\n  };\n\n  // --- Resize SVG by updating width and height attributes ---\n  const handleResize = (width: string, height: string) => {\n    if (!svgCode.trim()) {\n      message.warning('No SVG loaded.');\n      return;\n    }\n\n    if (!width || !height) {\n      message.warning('Please enter both width and height.');\n      return;\n    }\n\n    let updated = svgCode;\n\n    if (updated.includes('width=')) {\n      updated = updated.replace(/width=\"[^\"]*\"/, `width=\"${width}\"`);\n    } else {\n      updated = updated.replace('<svg', `<svg width=\"${width}\"`);\n    }\n\n    if (updated.includes('height=')) {\n      updated = updated.replace(/height=\"[^\"]*\"/, `height=\"${height}\"`);\n    } else {\n      updated = updated.replace('<svg', `<svg height=\"${height}\"`);\n    }\n\n    setSvgCode(updated);\n    setPreview(updated);\n    message.success(`SVG resized to ${width} × ${height}`);\n  };\n\n  // --- Copy SVG code to clipboard ---\n  const handleCopyCode = () => handleCopy(svgCode, 'Copied SVG code to clipboard!');\n\n  // --- Clear SVG code and preview ---\n  const handleClear = () => {\n    setSvgCode(''); // Clear SVG code\n    setPreview(''); // Clear preview\n    setSizeInfo(null); // Clear size info\n    setSvgSize({ width: '', height: '' }); // Clear detected size\n  };\n\n  // --- Download SVG or other data as file ---\n  const handleDownload = (data: string, filename: string, type: string) => {\n    const blob = new Blob([data], { type }); // Create a blob from data\n    const link = document.createElement('a'); // Create an anchor element\n    link.href = URL.createObjectURL(blob); // Set href to blob URL\n    link.download = filename; // Set file name\n    link.click(); // Trigger download\n    URL.revokeObjectURL(link.href); // Clean up URL object\n  };\n\n  // --- Helper function to format XML ---\n  const formatXML = (xml: string) => {\n    xml = xml.replace(/>\\s+</g, '><').replace(/\\r|\\n/g, '').trim(); // Remove whitespace between tags and newlines\n    xml = xml.replace(/(>)(<)(\\/*)/g, '$1\\n$2$3'); // Add newline between tags\n    const lines = xml.split('\\n'); // Split XML into lines\n    let indentLevel = 0; // Initialize indentation level\n    const formattedLines: string[] = []; // Store formatted lines\n\n    lines.forEach((line) => {\n      if (line.match(/^<\\/\\w/)) indentLevel--; // Decrease indent for closing tags\n      const padding = '  '.repeat(indentLevel); // Create padding string\n      let formattedLine = padding + line.trim(); // Apply padding\n      if (formattedLine.match(/^<\\w.*\\s+\\w+=/)) {\n        // If tag has attributes\n        formattedLine = formattedLine.replace(/(\\s+\\w+=)/g, '\\n' + padding + '  $1'); // Put each attribute on a new line\n      }\n      formattedLines.push(formattedLine); // Add formatted line to array\n      if (line.match(/^<\\w[^>]*[^/]>$/)) indentLevel++; // Increase indent for opening tag\n    });\n\n    return formattedLines.join('\\n').trim(); // Join all lines\n  };\n\n  // --- Prettify SVG code ---\n  const prettifySVG = () => {\n    if (!svgCode.trim()) {\n      message.warning('No SVG code to prettify.');\n      return;\n    }\n    try {\n      const pretty = formatXML(svgCode);\n      setSvgCode(pretty);\n      setPreview(pretty);\n      extractSize(pretty);\n      message.success('SVG prettified!');\n    } catch (err) {\n      console.error(err);\n      message.error('Failed to prettify SVG.');\n    }\n  };\n\n  // --- Optimize SVG using SVGO ---\n  const handleOptimize = () => {\n    if (!svgCode.trim()) {\n      // Check if SVG code exists\n      message.warning('No SVG code to optimize.');\n      return;\n    }\n    try {\n      const beforeSize = new Blob([svgCode]).size; // Get original size\n      const result = optimize(svgCode, { multipass: true }); // Optimize SVG\n      let optimized = result.data; // Get optimized code\n\n      // Remove unnecessary whitespace\n      optimized = optimized\n        .replace(/\\n+/g, '')\n        .replace(/\\r+/g, '')\n        .replace(/\\t+/g, '')\n        .replace(/\\s{2,}/g, ' ')\n        .replace(/> </g, '><')\n        .trim();\n\n      const afterSize = new Blob([optimized]).size; // Get optimized size\n      setSvgCode(optimized); // Update SVG code\n      setPreview(optimized); // Update preview\n      setSizeInfo({ before: beforeSize, after: afterSize }); // Update size info\n\n      const percent = (((beforeSize - afterSize) / beforeSize) * 100).toFixed(1); // Calculate reduction\n      message.success(`SVG optimized! Reduced by ${percent}%`);\n    } catch (err) {\n      console.error(err);\n      message.error('Failed to optimize SVG.');\n    }\n  };\n\n  // --- Generate Data URI string ---\n  const getDataURI = () => `data:image/svg+xml;utf8,${encodeURIComponent(svgCode)}`;\n\n  // --- Generate Base64 string ---\n  const getBase64 = () =>\n    `data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(svgCode)))}`;\n\n  // --- Convert SVG to Canvas image (PNG or ICO) ---\n  const svgToCanvas = async (mimeType: string) => {\n    return new Promise<string>((resolve, reject) => {\n      const img = new Image(); // Create image element\n      img.onload = () => {\n        const canvas = document.createElement('canvas'); // Create canvas\n        canvas.width = img.width; // Set width\n        canvas.height = img.height; // Set height\n        const ctx = canvas.getContext('2d'); // Get 2D context\n        if (!ctx) return reject('Canvas context not found'); // Error if context missing\n        ctx.drawImage(img, 0, 0); // Draw image on canvas\n        resolve(canvas.toDataURL(mimeType)); // Return as data URL\n      };\n      img.onerror = reject; // Reject on load error\n      img.src = getDataURI(); // Set image source\n    });\n  };\n\n  // --- Download PNG ---\n  const handleDownloadPng = async () => {\n    try {\n      const dataUrl = await svgToCanvas('image/png'); // Convert SVG to PNG\n      const link = document.createElement('a'); // Create link\n      link.href = dataUrl;\n      link.download = 'image.png'; // Set filename\n      link.click(); // Trigger download\n    } catch {\n      message.error('Failed to convert to PNG.');\n    }\n  };\n\n  // --- Download ICO ---\n  const handleDownloadIco = async () => {\n    try {\n      const dataUrl = await svgToCanvas('image/x-icon'); // Convert SVG to ICO\n      const link = document.createElement('a'); // Create link\n      link.href = dataUrl;\n      link.download = 'favicon.ico'; // Set filename\n      link.click(); // Trigger download\n    } catch {\n      message.error('Failed to convert to ICO.');\n    }\n  };\n\n  // --- Flip SVG horizontally ---\n  const flipHorizontal = () => {\n    if (!svgCode.trim()) {\n      message.warning('No SVG loaded.');\n      return;\n    }\n    let updated = svgCode;\n\n    // Insert or update transform attribute\n    updated = updated.replace(/<svg([^>]*)>/, (match, attrs) => {\n      if (attrs.includes('transform=')) {\n        return `<svg${attrs.replace(/transform=\"([^\"]*)\"/, 'transform=\"scale(-1,1) $1\"')}>`;\n      } else {\n        return `<svg${attrs} transform=\"scale(-1,1)\">`;\n      }\n    });\n\n    setSvgCode(updated);\n    setPreview(updated);\n    message.success('Flipped horizontally!');\n  };\n\n  // --- Flip SVG vertically ---\n  const flipVertical = () => {\n    if (!svgCode.trim()) {\n      message.warning('No SVG loaded.');\n      return;\n    }\n    let updated = svgCode;\n\n    updated = updated.replace(/<svg([^>]*)>/, (match, attrs) => {\n      if (attrs.includes('transform=')) {\n        return `<svg${attrs.replace(/transform=\"([^\"]*)\"/, 'transform=\"scale(1,-1) $1\"')}>`;\n      } else {\n        return `<svg${attrs} transform=\"scale(1,-1)\">`;\n      }\n    });\n\n    setSvgCode(updated);\n    setPreview(updated);\n    message.success('Flipped vertically!');\n  };\n\n  return (\n    <div\n      onDragEnter={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        dragCounter.current++;\n        setDragging(true);\n      }}\n      onDragOver={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n      onDragLeave={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        dragCounter.current--;\n        if (dragCounter.current <= 0) {\n          dragCounter.current = 0;\n          setDragging(false);\n        }\n      }}\n      onDrop={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setDragging(false);\n        dragCounter.current = 0;\n        const files = e.dataTransfer.files;\n        if (files.length > 0) handleUpload(files[0]);\n      }}\n      style={{ position: 'relative', minHeight: '100vh' }}\n    >\n      <Card title=\"🧩 SVG Viewer\" variant={'borderless'} className={styles.container}>\n        <div className={styles.content}>\n          <Splitter\n            layout={isMobile ? 'vertical' : 'horizontal'}\n            style={isMobile ? { height: 1600 } : {}}\n          >\n            <Splitter.Panel defaultSize=\"50%\" min=\"20%\" max=\"70%\" style={{ padding: '0px 10px' }}>\n              {/* Left Side - Editor */}\n              <div className={styles.editorSection}>\n                <Space\n                  className={styles.topActions}\n                  style={{ marginTop: 12, marginBottom: 8 }}\n                  wrap\n                >\n                  <Upload beforeUpload={handleUpload} showUploadList={false} accept=\".svg\">\n                    <Button icon={<UploadOutlined />}>Upload SVG</Button>\n                  </Upload>\n                  <Button onClick={prettifySVG} icon={<HighlightOutlined />}>\n                    Prettify\n                  </Button>\n                  <Button onClick={handleOptimize} icon={<CompressOutlined />}>\n                    Optimize\n                  </Button>\n                </Space>\n\n                {/* Show size info */}\n                {sizeInfo && (\n                  <Text type=\"secondary\" className=\"mb-2 block\">\n                    Size: <b>{(sizeInfo.before / 1024).toFixed(2)} KB</b>\n                    {sizeInfo.after && (\n                      <>\n                        {' '}\n                        → <b>{(sizeInfo.after / 1024).toFixed(2)} KB</b> (\n                        {(((sizeInfo.before - sizeInfo.after) / sizeInfo.before) * 100).toFixed(1)}%\n                        smaller)\n                      </>\n                    )}\n                  </Text>\n                )}\n\n                {/* Editor */}\n                <div className={styles.editorBox}>\n                  <Editor\n                    height=\"100%\"\n                    defaultLanguage=\"xml\"\n                    value={svgCode}\n                    onChange={(val) => {\n                      const code = val || '';\n                      setSvgCode(code);\n                      setPreview(code);\n                      extractSize(code);\n                    }}\n                    theme=\"vs-light\"\n                    options={{ minimap: { enabled: false }, wordWrap: 'on', fontSize: 14 }}\n                  />\n                </div>\n\n                {/* Editor actions */}\n                <Space className={styles.actions} wrap>\n                  <Button type=\"primary\" onClick={handleCopyCode} icon={<CopyOutlined />}>\n                    Copy\n                  </Button>\n                  <Button danger onClick={handleClear} icon={<DeleteOutlined />}>\n                    Clear\n                  </Button>\n                </Space>\n                {/* Resize controls */}\n                <Space style={{ float: 'right', marginTop: 16 }}>\n                  <Text strong>Resize:</Text>\n                  <Input\n                    size=\"small\"\n                    prefix={<CompressOutlined />}\n                    placeholder=\"W\"\n                    style={{ width: 90 }}\n                    value={svgSize.width}\n                    onChange={(e) => {\n                      const width = e.target.value;\n                      setSvgSize((prev) => ({ ...prev, width }));\n                      if (width && svgSize.height) debouncedResize(width, svgSize.height);\n                    }}\n                  />\n                  x\n                  <Input\n                    size=\"small\"\n                    prefix={<CompressOutlined />}\n                    placeholder=\"H\"\n                    style={{ width: 90 }}\n                    value={svgSize.height}\n                    onChange={(e) => {\n                      const height = e.target.value;\n                      setSvgSize((prev) => ({ ...prev, height }));\n                      if (height && svgSize.width) debouncedResize(svgSize.width, height);\n                    }}\n                  />\n                  <Tooltip title={'Flip H'}>\n                    <Button onClick={flipHorizontal} icon={<SwapOutlined />} />\n                  </Tooltip>\n                  <Tooltip title={'Flip V'}>\n                    <Button\n                      onClick={flipVertical}\n                      icon={<SwapOutlined style={{ transform: 'rotate(90deg)' }} />}\n                    />\n                  </Tooltip>\n                </Space>\n              </div>\n            </Splitter.Panel>\n            <Splitter.Panel style={{ padding: '0px 10px' }}>\n              {/* Right Side - Preview */}\n              <div className={styles.previewWrapper}>\n                <Tabs\n                  activeKey={activeTab}\n                  onChange={(key) => setActiveTab(key)}\n                  items={[\n                    {\n                      key: 'svg',\n                      label: 'SVG',\n                      children: (\n                        <div className={`${styles.previewSection} ${styles[bgMode]}`}>\n                          <div\n                            style={{\n                              transform: `scale(${zoom})`,\n                              transformOrigin: 'top left', // ensure scaling doesn't cut off top-left\n                              maxWidth: '100%',\n                              maxHeight: '100%',\n                              display: 'inline-block',\n                            }}\n                            dangerouslySetInnerHTML={{\n                              __html: preview\n                                .split('<!-- New SVG appended -->')\n                                .map((part, i) => `<div>${part}</div>`)\n                                .join(''),\n                            }}\n                          />\n                        </div>\n                      ),\n                    },\n                    {\n                      key: 'png',\n                      label: 'PNG',\n                      children: (\n                        <div className={`${styles.previewSection} ${styles[bgMode]}`}>\n                          <img src={getDataURI()} alt=\"PNG preview\" style={{ maxWidth: '100%' }} />\n                        </div>\n                      ),\n                    },\n                    {\n                      key: 'ico',\n                      label: 'ICO',\n                      children: (\n                        <div className={`${styles.previewSection} ${styles[bgMode]}`}>\n                          <img src={getDataURI()} alt=\"ICO preview\" style={{ maxWidth: '100%' }} />\n                        </div>\n                      ),\n                    },\n                    {\n                      key: 'datauri',\n                      label: 'Data URI',\n                      children: <pre className={styles.previewCodeBox}>{getDataURI()}</pre>,\n                    },\n                    {\n                      key: 'base64',\n                      label: 'Base64',\n                      children: <pre className={styles.previewCodeBox}>{getBase64()}</pre>,\n                    },\n                  ]}\n                />\n\n                {/* Bottom-left: background mode switch */}\n                <div className={styles.previewFooter}>\n                  <Space>\n                    <Segmented\n                      options={[\n                        { label: 'Transparent', value: 'transparent' },\n                        { label: 'White', value: 'white' },\n                        { label: 'Grey', value: 'grey' },\n                        { label: 'Black', value: 'black' },\n                      ]}\n                      value={bgMode}\n                      onChange={(val) => setBgMode(val as any)}\n                    />\n                    <Tooltip title=\"Zoom Out\">\n                      <Button icon={<MinusOutlined />} onClick={handleZoomOut} />\n                    </Tooltip>\n                    <Tooltip title=\"Zoom In\">\n                      <Button icon={<PlusOutlined />} onClick={handleZoomIn} />\n                    </Tooltip>\n                    <Tooltip title=\"Reset Zoom\">\n                      <Button icon={<SyncOutlined />} onClick={handleResetZoom} />\n                    </Tooltip>\n                    <Text type=\"secondary\">{Math.round(zoom * 100)}%</Text>\n                  </Space>\n                </div>\n\n                {/* Bottom-right: download / copy actions */}\n                <div className={styles.previewActions}>\n                  {['svg', 'png', 'ico'].includes(activeTab) && (\n                    <Button\n                      type=\"primary\"\n                      icon={<DownloadOutlined />}\n                      onClick={\n                        activeTab === 'svg'\n                          ? () => handleDownload(svgCode, 'image.svg', 'image/svg+xml')\n                          : activeTab === 'png'\n                          ? handleDownloadPng\n                          : handleDownloadIco\n                      }\n                    >\n                      Download {activeTab.toUpperCase()}\n                    </Button>\n                  )}\n                  {['datauri', 'base64'].includes(activeTab) && (\n                    <Button\n                      icon={<CopyOutlined />}\n                      onClick={() =>\n                        handleCopy(\n                          activeTab === 'datauri' ? getDataURI() : getBase64(),\n                          `Copied ${activeTab.toUpperCase()} to clipboard!`,\n                        )\n                      }\n                    >\n                      Copy {activeTab.toUpperCase()}\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </Splitter.Panel>\n          </Splitter>\n        </div>\n      </Card>\n\n      {/* Drag overlay */}\n      {dragging && (\n        <div\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'rgba(0,0,0,0.1)',\n            border: '2px dashed #1890ff',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'column',\n            zIndex: 1000,\n          }}\n        >\n          <UploadOutlined style={{ fontSize: 48, color: '#1890ff' }} />\n          <p style={{ fontSize: 18, marginTop: 8 }}>Drop your SVG file here to upload</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SVGViewer;\n"],"names":[],"mappings":"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"}